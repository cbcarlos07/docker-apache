{"version":3,"mappings":"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","names":["constructor","availabilities","locations","brands","transmissions","categories","prices","this","i0","ctx_r9","ctx_r13","ctx_r19","ctx_r25","ctx_r31","ctx_r37","ctx_r43","ctx_r47","ctx_r50","ctx_r51","ctx_r52","ctx_r53","ctx_r54","ctx_r55","ctx_r63","ctx_r67","ctx_r73","ctx_r79","ctx_r85","ctx_r91","ctx_r97","ctx_r101","ctx_r103","ctx_r104","ctx_r106","ctx_r107","ctx_r108","ctx_r109","ctx_r110","ctx_r111","ctx_r112","MovidaShowResultSidebarComponent","device","Filter","EventEmitter","ngOnInit","isMobile","showContent","attr","activeItem","showModal","activeModal","document","getElementsByTagName","style","closeModal","createItensChecked","event","itemChecked","filterGroup","onBack","emit","searchLocation","filterLocations","itensFilter","filter","p","replaceSpecialChars","name","toLowerCase","includes","textSearch","clearSearchLocation","str","normalize","replace","selectors","ctx_r3","MovidaShowResultComponent","filtersService","vitrineService","router","activeRoute","SubSink","firstPrice","value","secondPrice","thirdPrice","fourthPrice","id","label","link","getValueFilter","restCars","cars","length","toString","getFilters","subscribe","res","data","location","map","getCarsForShowcase","ex","filterMount","column","fipe","group","index","findIndex","item","fipes","push","checked","mountPriceFilter","priceData","getIndexByArray","updateValueInListPrice","pushValueInListPrice","array","order","processUrl","url","typeSearch","searchType","search","snapshot","paramMap","get","checkFilter","n","queryParamMap","params","terms","doSearchTerms","type","filterIndex","doSearch","arrayOptions","countItemTrue","itensFilterChecked","applyFilterArrayCars","car","brand","toLocaleLowerCase","detail","searchLower","pickape_today","moment","add","format","pickape_return","sub","sink","getShowcaseV2","VehAvailRSCore","VehVendorAvails","VehVendorAvail","VehAvails","vehicle","deadline","VehAvail","VehAvailCore","Vehicle","Deadline","Filiais","VehMakeModel","Name","split","transmission","TransmissionType","category","Categoria","price","TotalCharge","Periods","valor_mensal_total","FipeCode","locationIndex","FilialID","locationName","Abreviatura","locationTransformed","transformLocationName","model","Description","promotionValue","image","Image","msgComPromo","VehAvailInfo","MessagePromocaoVeiculo","copyOriginalArrays","sort","a","b","changeItemModal","itensFilter2","filterLocations2","carsLoaded","contentLoad","location_array","charAt","toUpperCase","slice","join","position","modal","orderItem","indexOf","applyFilters","target","originalCarList","splice","getListOfCars","array1","array2","getListOfFilters","mountNewFilter","arra2","originalFilterList","Object","removeFilterOption","indexOptions","itemFilter","groups","isEmpty","Set","Array","from","reduce","c","forEach","v","has","ctx","routes","path","component","setCarsLoading","$event","carsLoading","ShowcaseAllCarsComponent","ShowcaseAllCarsRoutingModule","RouterModule","ShowcaseAllCarsModule","CommonModule","MovidaShowResultModule","SharedModule"],"sources":["./projects/zkm-components/src/lib/components/movida-show-result/movida-show-result.model.ts","./projects/zkm-components/src/lib/components/movida-show-result/movida-show-result-sidebar/movida-show-result-sidebar.component.html","./projects/zkm-components/src/lib/components/movida-show-result/movida-show-result-sidebar/movida-show-result-sidebar.component.ts","./projects/zkm-components/src/lib/components/movida-show-result/movida-show-result.component.html","./projects/zkm-components/src/lib/components/movida-show-result/movida-show-result.component.ts","./src/app/pages/shocase-all-cars/showcase-all-cars.component.html","./src/app/pages/shocase-all-cars/showcase-all-cars-routing.module.ts","./src/app/pages/shocase-all-cars/showcase-all-cars.component.ts","./src/app/pages/shocase-all-cars/showcase-all-cars.module.ts"],"sourcesContent":["export class Filter {\n    constructor(\n        public availabilities: Array<any>,\n        public locations: Array<any>,\n        public brands: Array<any>,\n        public transmissions: Array<any>,\n        public categories: Array<any>,\n        public prices: Array<any>,\n    ) {}\n}","<div class=\"show-result-sidebar sidebar-desktop\" *ngIf=\"!isMobile\">\n    <div class=\"show-result-sidebar-header\">\n        <p>ASSINE JÁ</p>\n        <h2>Selecione seu veículo</h2>\n    </div>\n    <div class=\"show-result-sidebar-itens\" [ngClass]=\"{'open': activeItem == 'location'}\">\n        <span class=\"location-filter span-filter\" (click)=\"showContent('location')\">\n            <h3>Loja para retirada</h3>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        <div class=\"show-result-sidebar-itens-content\" style=\"overflow-y: hidden !important;\">\n            <div class=\"location-search\">\n                <icon-search class=\"icon-search\"></icon-search>\n                <input type=\"search\" [(ngModel)]=\"textSearch\" (input)=\"searchLocation()\" placeholder=\"Filtrar loja ou cidade\">\n                <app-button *ngIf=\"textSearch.length > 0\" class=\"icon-new-close\" icon=\"icon-new-close\" size=\"small\" color=\"neutral-500\" (click)=\"clearSearchLocation()\">\n                </app-button>\n            </div>\n            <div class=\"scroll-location\">\n                <ng-container *ngFor=\"let location of itensFilter.locations\">\n                    <div class=\"filter-value\" *ngIf=\"(location.name.length != 0)\" >\n                        <label class=\"filter-value-text\" [ngClass]=\"location.checked ? 'text-checked' : ''\" [for]=\"'locations_'+location.name+'_id'\">{{ location.name }}</label>\n                        <label class=\"filter-value-checkbox\">\n                            <input [id]=\"'locations_'+location.name+'_id'\" type=\"checkbox\" [checked]=\"location.checked\" (change)=\"createItensChecked($event, location, 'locations')\"/>\n                            <span class=\"checkbox-span\"></span>\n                        </label>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class=\"show-result-sidebar-itens\" [ngClass]=\"{'open': activeItem == 'prazo'}\">\n        <span class=\"prazo-filter span-filter\" (click)=\"showContent('prazo')\">\n            <h3>Prazo</h3>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        <div class=\"show-result-sidebar-itens-content\">\n            <ng-container *ngFor=\"let availability of itensFilter.availabilities\">\n                <div class=\"filter-value\" *ngIf=\"availability.fipes.length > 0\">\n                    <label class=\"filter-value-text\" [ngClass]=\"availability.checked ? 'text-checked' : ''\" [for]=\"'availabilities_'+availability.name+'_id'\">{{ availability.name }}</label>\n                    <label class=\"filter-value-checkbox\">\n                        <input [id]=\"'availabilities_'+availability.name+'_id'\" type=\"checkbox\" [checked]=\"availability.checked\" (change)=\"createItensChecked($event, availability, 'availabilities')\"/>\n                        <span class=\"checkbox-span\"></span>\n                    </label>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"show-result-sidebar-itens\" [ngClass]=\"{'open': activeItem == 'categorias'}\">\n        <span class=\"categorias-filter span-filter\" (click)=\"showContent('categorias')\">\n            <h3>Categorias</h3>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        <div class=\"show-result-sidebar-itens-content\">\n            <ng-container *ngFor=\"let category of itensFilter.categories\">\n                <div class=\"filter-value\" *ngIf=\"category.fipes.length > 0\">\n                    <label class=\"filter-value-text\" [ngClass]=\"category.checked ? 'text-checked' : ''\" [for]=\"'categories_'+category.name+'_id'\">{{ category.name }}</label>\n                    <label class=\"filter-value-checkbox\">\n                        <input [id]=\"'categories_'+category.name+'_id'\" type=\"checkbox\" [checked]=\"category.checked\" (change)=\"createItensChecked($event, category, 'categories')\"/>\n                        <span class=\"checkbox-span\"></span>\n                    </label>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"show-result-sidebar-itens\" [ngClass]=\"{'open': activeItem == 'marca'}\">\n        <span class=\"marca-filter span-filter\" (click)=\"showContent('marca')\">\n            <h3>Marca</h3>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        <div class=\"show-result-sidebar-itens-content\">\n            <ng-container *ngFor=\"let brand of itensFilter.brands\">\n                <div class=\"filter-value\" *ngIf=\"brand.fipes.length > 0\">\n                    <label class=\"filter-value-text\" [ngClass]=\"brand.checked ? 'text-checked' : ''\" [for]=\"'brands_'+brand.name+'_id'\">{{ brand.name }}</label>\n                    <label class=\"filter-value-checkbox\">\n                        <input [id]=\"'brands_'+brand.name+'_id'\" type=\"checkbox\" [checked]=\"brand.checked\" (change)=\"createItensChecked($event, brand, 'brands')\"/>\n                        <span class=\"checkbox-span\"></span>\n                    </label>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"show-result-sidebar-itens\" [ngClass]=\"{'open': activeItem == 'preco'}\">\n        <span class=\"preco-filter span-filter\" (click)=\"showContent('preco')\">\n            <h3>Preço</h3>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        <div class=\"show-result-sidebar-itens-content\">\n            <ng-container *ngFor=\"let price of itensFilter.prices\">\n                <div class=\"filter-value\" *ngIf=\"price.fipes.length > 0\">\n                    <label class=\"filter-value-text\" [ngClass]=\"price.checked ? 'text-checked' : ''\" [for]=\"'prices_'+price.name+'_id'\">{{ price.name }}</label>\n                    <label class=\"filter-value-checkbox\">\n                        <input [id]=\"'prices_'+price.name+'_id'\" type=\"checkbox\" [checked]=\"price.checked\" (change)=\"createItensChecked($event, price, 'prices')\"/>\n                        <span class=\"checkbox-span\"></span>\n                    </label>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    \n    <div class=\"show-result-sidebar-itens\" [ngClass]=\"{'open': activeItem == 'transmissao'}\">\n        <span class=\"transmissao-filter span-filter\" (click)=\"showContent('transmissao')\">\n            <h3>Transmissão</h3>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        <div class=\"show-result-sidebar-itens-content\">\n            <ng-container *ngFor=\"let transmission of itensFilter.transmissions\">\n                <div class=\"filter-value\" *ngIf=\"transmission.fipes.length > 0\">\n                    <label class=\"filter-value-text\" [ngClass]=\"transmission.checked ? 'text-checked' : ''\" [for]=\"'transmissions_'+transmission.name+'_id'\">{{ transmission.name }}</label>\n                    <label class=\"filter-value-checkbox\">\n                        <input [id]=\"'transmissions_'+transmission.name+'_id'\" type=\"checkbox\" [checked]=\"transmission.checked\" (change)=\"createItensChecked($event, transmission, 'transmissions')\"/>\n                        <span class=\"checkbox-span\"></span>\n                    </label>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n<div class=\"sidebar-mobile\" *ngIf=\"isMobile\">\n    <div class=\"sidebar-mobile-form\">\n        <div class=\"sidebar-mobile-form-text\">\n            <p>ASSINE JÁ</p>\n            <h2>Selecione seu veículo</h2>\n        </div>\n        <app-button text=\"Filtros\" color=\"tertiary\" size=\"small\" icon=\"icon-filter\" (click)=\"showModal()\"></app-button>\n    </div>\n    <div class=\"sidebar-mobile-modal\" [ngClass]=\"{'modal-active': activeModal}\">\n        <div class=\"show-result-sidebar-header-mob\">\n            <p>Filtrar resultados</p>\n            <svg (click)=\"closeModal()\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 4L4 12\" stroke=\"#231F20\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                <path d=\"M4 4L12 12\" stroke=\"#231F20\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </div>\n        <div class=\"show-result-sidebar-itens-mob\" [ngClass]=\"{'open': activeItem == 'location'}\">\n            <span class=\"location-filter span-filter\" (click)=\"showContent('location')\">\n                <h3>Loja para retirada</h3>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </span>\n            <div class=\"show-result-sidebar-itens-content\" style=\"overflow-y: hidden !important;\">\n                <div class=\"location-search\">\n                    <icon-search class=\"icon-search\"></icon-search>\n                    <input type=\"search\" [(ngModel)]=\"textSearch\" (input)=\"searchLocation()\" placeholder=\"Filtrar loja ou cidade\">\n                    <app-button *ngIf=\"textSearch.length > 0\" class=\"icon-new-close\" icon=\"icon-new-close\" size=\"small\" color=\"neutral-500\" (click)=\"clearSearchLocation()\">\n                    </app-button>\n                </div>\n                <div class=\"scroll-location\">\n                    <ng-container *ngFor=\"let location of itensFilter.locations\">\n                        <div class=\"filter-value\" *ngIf=\"(location.name.length != 0)\">\n                            <label class=\"filter-value-text\" [ngClass]=\"location.checked ? 'text-checked' : ''\" [for]=\"'locations_'+location.name+'_id'\">{{ location.name }}</label>\n                            <label class=\"filter-value-checkbox\">\n                                <input [id]=\"'locations_'+location.name+'_id'\" type=\"checkbox\" [checked]=\"location.checked\" (change)=\"createItensChecked($event, location, 'locations')\"/>\n                                <span class=\"checkbox-span\"></span>\n                            </label>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n        <div class=\"show-result-sidebar-itens-mob\" [ngClass]=\"{'open': activeItem == 'prazo'}\">\n            <span class=\"prazo-filter span-filter\" (click)=\"showContent('prazo')\">\n                <h3>Prazo</h3>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </span>\n            <div class=\"show-result-sidebar-itens-content\">\n                <ng-container *ngFor=\"let availability of itensFilter.availabilities\">\n                    <div class=\"filter-value\" *ngIf=\"availability.fipes.length > 0\">\n                        <label class=\"filter-value-text\" [ngClass]=\"availability.checked ? 'text-checked' : ''\" [for]=\"'availabilities_'+availability.name+'_id'\">{{ availability.name }}</label>\n                        <label class=\"filter-value-checkbox\">\n                            <input [id]=\"'availabilities_'+availability.name+'_id'\" type=\"checkbox\" [checked]=\"availability.checked\" (change)=\"createItensChecked($event, availability, 'availabilities')\"/>\n                          <span class=\"checkbox-span\"></span>\n                        </label>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"show-result-sidebar-itens-mob\" [ngClass]=\"{'open': activeItem == 'categorias'}\">\n            <span class=\"categorias-filter span-filter\" (click)=\"showContent('categorias')\">\n                <h3>Categorias</h3>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </span>\n            <div class=\"show-result-sidebar-itens-content\">\n                <ng-container *ngFor=\"let category of itensFilter.categories\">\n                    <div class=\"filter-value\" *ngIf=\"category.fipes.length > 0\">\n                        <label class=\"filter-value-text\" [ngClass]=\"category.checked ? 'text-checked' : ''\" [for]=\"'categories_'+category.name+'_id'\">{{ category.name }}</label>\n                        <label class=\"filter-value-checkbox\">\n                            <input [id]=\"'categories_'+category.name+'_id'\" type=\"checkbox\" [checked]=\"category.checked\" (change)=\"createItensChecked($event, category, 'categories')\"/>\n                            <span class=\"checkbox-span\"></span>\n                        </label>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"show-result-sidebar-itens-mob\" [ngClass]=\"{'open': activeItem == 'marca'}\">\n            <span class=\"marca-filter span-filter\" (click)=\"showContent('marca')\">\n                <h3>Marca</h3>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </span>\n            <div class=\"show-result-sidebar-itens-content\">\n                <ng-container *ngFor=\"let brand of itensFilter.brands\">\n                    <div class=\"filter-value\" *ngIf=\"brand.fipes.length > 0\">\n                        <label class=\"filter-value-text\" [ngClass]=\"brand.checked ? 'text-checked' : ''\" [for]=\"'brands_'+brand.name+'_id'\">{{ brand.name }}</label>\n                        <label class=\"filter-value-checkbox\">\n                            <input [id]=\"'brands_'+brand.name+'_id'\" type=\"checkbox\" [checked]=\"brand.checked\" (change)=\"createItensChecked($event, brand, 'brands')\"/>\n                            <span class=\"checkbox-span\"></span>\n                        </label>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"show-result-sidebar-itens-mob\" [ngClass]=\"{'open': activeItem == 'preco'}\">\n            <span class=\"preco-filter span-filter\" (click)=\"showContent('preco')\">\n                <h3>Preço</h3>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </span>\n            <div class=\"show-result-sidebar-itens-content\">\n                <ng-container *ngFor=\"let price of itensFilter.prices\">\n                    <div class=\"filter-value\" *ngIf=\"price.fipes.length > 0\">\n                        <label class=\"filter-value-text\" [ngClass]=\"price.checked ? 'text-checked' : ''\" [for]=\"'prices_'+price.name+'_id'\">{{ price.name }}</label>\n                        <label class=\"filter-value-checkbox\">\n                            <input [id]=\"'prices_'+price.name+'_id'\" type=\"checkbox\" [checked]=\"price.checked\" (change)=\"createItensChecked($event, price, 'prices')\"/>\n                            <span class=\"checkbox-span\"></span>\n                        </label>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n      \n        <div class=\"show-result-sidebar-itens-mob\" [ngClass]=\"{'open': activeItem == 'transmissao'}\">\n            <span class=\"transmissao-filter span-filter\" (click)=\"showContent('transmissao')\">\n                <h3>Transmissão</h3>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 9L12 15L18 9\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </span>\n            <div class=\"show-result-sidebar-itens-content\">\n                <ng-container *ngFor=\"let transmission of itensFilter.transmissions\">\n                    <div class=\"filter-value\" *ngIf=\"transmission.fipes.length > 0\">\n                        <label class=\"filter-value-text\" [ngClass]=\"transmission.checked ? 'text-checked' : ''\" [for]=\"'transmissions_'+transmission.name+'_id'\">{{ transmission.name }}</label>\n                        <label class=\"filter-value-checkbox\">\n                            <input [id]=\"'transmissions_'+transmission.name+'_id'\" type=\"checkbox\" [checked]=\"transmission.checked\" (change)=\"createItensChecked($event, transmission, 'transmissions')\"/>\n                            <span class=\"checkbox-span\"></span>\n                        </label>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"show-result-sidebar-button\">\n            <app-button [text]=\"'Exibir resultados (' + qtdCars + ')'\" color=\"primary-500\" (click)=\"closeModal()\"></app-button>\n        </div>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\nimport { Filter } from \"../movida-show-result.model\";\n\nimport { DeviceDetectorService } from 'ngx-device-detector';\n\n@Component({\n\tselector: 'movida-show-result-sidebar',\n\ttemplateUrl: './movida-show-result-sidebar.component.html',\n\tstyleUrls: ['./movida-show-result-sidebar.component.scss']\n})\nexport class MovidaShowResultSidebarComponent {\n\n\tpublic activeItem: string = ''\n\tpublic activeModal: boolean = false\n\tpublic textSearch = ''\n\tpublic filterLocations: any\n\n\t@Input() public itensFilter: any = []\n\n\tpublic itensFilterChecked: Filter = new Filter([],[],[],[],[],[])\n\n\t@Output() onBack: EventEmitter<any> = new EventEmitter();\n\n\t@Input() qtdCars = 0;\n\n  public isMobile : boolean = false;\n\n\tngOnInit() {\n    this.isMobile = this.device.isMobile();\n\t}\n\n  constructor(private device: DeviceDetectorService) {}\n\n\tshowContent(attr: string) {\n\t\tif (this.activeItem == attr) {\n\t\t\tthis.activeItem = ''\n\t\t\treturn\n\t\t}\n\t\tthis.activeItem = attr;\n\t}\n\tshowModal() {\n\t\tif(this.activeModal) {\n      this.activeModal = false\n\t\t} else {\n\t\t\tthis.activeModal = true\n      document.getElementsByTagName('body')[0].style['overflow-y'] = 'hidden';\n\t\t}\n\t}\n\tcloseModal() {\n\t\tthis.activeModal = false\n    \tdocument.getElementsByTagName('body')[0].style['overflow-y'] = '';\n\t}\n\t/*\n\tselected(event, item: string, groupItem: string) {\n\n\t\tlet array = this.itensFilterChecked\n\t\tlet res = array.find(element => element.name == groupItem);\n\n\t\tif(res == undefined) {\n\t\t\tarray.push({\n\t\t\t\tname: groupItem,\n\t\t\t\tvalue: [item]\n\t\t\t})\n\t\t} else {\n\t\t\tarray.forEach((i) => {\n\t\t\t\tlet indexGroup = i.name.indexOf(groupItem)\n\t\t\t\tif(indexGroup > -1) {\n\t\t\t\t\tlet indexItem = i.value.indexOf(item)\n\t\t\t\t\tif(!event.target.checked) {\n\t\t\t\t\t\ti.value.splice(indexItem, 1)\n\t\t\t\t\t\tif (i.value.length == 0) {\n\t\t\t\t\t\t\tarray.splice(indexGroup, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti.value.push(item)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tthis.back()\n\n\t}*/\n\n\n\tcreateItensChecked(event, itemChecked, filterGroup) {\n\t\tthis.onBack.emit([event, itemChecked, filterGroup]);\n\t}\n\n\n\n\tsearchLocation() {\n\t\tif(!this.filterLocations) {\n\t\t\tthis.filterLocations = [...this.itensFilter.locations]\n\t\t}\n\t\tthis.itensFilter.locations = this.filterLocations.filter(p=>{\n\t\t  return this.replaceSpecialChars(p.name).toLowerCase().includes(this.replaceSpecialChars(this.textSearch).toLowerCase())\n\t\t})\n\t\t\n\t  }\n\t\n\t  \n\tclearSearchLocation() {\n\t\tthis.textSearch = ''\n\t\tthis.itensFilter.locations = [...this.filterLocations]\n\t\t\n\t}\n\treplaceSpecialChars(str) {\n\t\treturn str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n\t}\n\n}\n","<div class=\"result\">\n    <movida-breadcrumbs [breadcrumbs]=\"breadCrumbs\"></movida-breadcrumbs>\n    <div class=\"result-content\">\n        <movida-show-result-sidebar [qtdCars]=\"cars.length\" [itensFilter]=\"itensFilter2\" (onBack)=\"applyFilters($event)\"></movida-show-result-sidebar>\n        <div class=\"result-content-right\">\n            <div class=\"result-content-right-info\">\n                <p class=\"result-content-right-info-text\">Exibindo<strong>{{ cars.length }}</strong>resultados</p>\n                <div class=\"result-content-right-info-option\">\n                    <p>Ordenar por:</p>\n                    <div class=\"button-order-modal\" (click)=\"showModal()\">\n                        <button>{{ orderItem }}</button>\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M6 9L12 15L18 9\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n            <div class=\"result-content-right-options\" id=\"options-selected\">\n                <button class=\"button-options\" *ngFor=\"let option of arrayOptions\" (click)=\"removeFilterOption(option)\">\n                    {{ option.name ? option.name : option }}\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M12 4L4 12\" stroke=\"#656F78\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        <path d=\"M4 4L12 12\" stroke=\"#656F78\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    </svg>\n                </button>\n            </div>\n            <div class=\"order-modal-desktop\" [ngClass]=\"{'modal-open-desktop': activeModal}\">\n                <ul>\n                    <li [ngClass]=\"{'active': orderItem == 'Menor preço'}\" (click)=\"changeItemModal('Menor preço')\">\n                        Menor preço\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <li [ngClass]=\"{'active': orderItem == 'Maior preço'}\" (click)=\"changeItemModal('Maior preço')\">\n                        Maior preço\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <li [ngClass]=\"{'active': orderItem == 'Alfabética (A-Z)'}\" (click)=\"changeItemModal('Alfabética (A-Z)')\">\n                        Alfabética (A-Z)\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <!--<li [ngClass]=\"{'active': orderItem == 'Mais buscados'}\" (click)=\"changeItemModal('Mais buscados')\">\n                        Mais buscados\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <li [ngClass]=\"{'active': orderItem == 'Mais vendidos'}\" (click)=\"changeItemModal('Mais vendidos')\">\n                        Mais vendidos\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>-->\n                </ul>\n            </div>\n            <div class=\"order-modal-mobile\" [ngClass]=\"{'modal-open-mobile': activeModal}\">\n                <div class=\"order-modal-mobile-header\">\n                    <p>Ordenar resultados</p>\n                    <svg (click)=\"changeItemModal(orderItem)\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M12 4L4 12\" stroke=\"#231F20\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        <path d=\"M4 4L12 12\" stroke=\"#231F20\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    </svg>\n                </div>\n                <ul>\n                    <li [ngClass]=\"{'active': orderItem == 'Menor preço'}\" (click)=\"changeItemModal('Menor preço')\">\n                        Menor preço\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <li [ngClass]=\"{'active': orderItem == 'Maior preço'}\" (click)=\"changeItemModal('Maior preço')\">\n                        Maior preço\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <li [ngClass]=\"{'active': orderItem == 'Alfabética (A-Z)'}\" (click)=\"changeItemModal('Alfabética (A-Z)')\">\n                        Alfabética (A-Z)\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <!--<li [ngClass]=\"{'active': orderItem == 'Mais buscados'}\" (click)=\"changeItemModal('Mais buscados')\">\n                        Mais buscados\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>\n                    <li [ngClass]=\"{'active': orderItem == 'Mais vendidos'}\" (click)=\"changeItemModal('Mais vendidos')\">\n                        Mais vendidos\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M13.3332 4L5.99984 11.3333L2.6665 8\" stroke=\"#41454C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </li>-->\n                </ul>\n            </div>\n            <div class=\"result-content-right-cards\">\n                <movida-card-prod *ngFor=\"let car of cars\" [type]=\"type\" [vitrine]=\"car\" [size]=\"'small'\"></movida-card-prod>\n                <!-- <div class=\"result-content-right-cards-last\" [id]=\"'type-card-'+restCars\">\n                    <div class=\"result-content-right-cards-last-content\">\n                        <h2>Não encontrou<br>o que procurava?</h2>\n                        <h3>Sem problemas, podemos<br>fazer um pedido especial só para você.</h3>\n                        <app-button text=\"Solicite uma proposta\" icon=\"icon-arrow-right\"  iconPosition=\"right\" color=\"primary-500\" route=\"/\"></app-button>\n                    </div>\n                </div> -->\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, /*Renderer2, */ EventEmitter, Output } from \"@angular/core\";\nimport { Car } from \"./../movida-showcase/showcase.model\";\n//import { ArrayBraedcrumbs } from \"../breadcrumbs/breadcrumbs.model\";\nimport { Filter } from \"./movida-show-result.model\";\nimport { MenuService } from 'src/app/core/services/header/menu.service';\nimport * as moment from 'moment';\nimport { VitrineService } from 'src/app/core/services/vitrine.service';\nimport { SubSink } from 'subsink';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { IBreadcrumb } from 'src/app/shared/breadcrumb/breadcrumb.component';\n\n@Component({\n\tselector: 'movida-show-result',\n\ttemplateUrl: './movida-show-result.component.html',\n\tstyleUrls: ['./movida-show-result.component.scss']\n})\nexport class MovidaShowResultComponent {\n\tpublic type: string = 'find';\n\n\tpublic restCars: string\n\n\tpublic countItemTrue: number = 0\n\n\tpublic cars: Car[] = []\n\n\tpublic originalCarList: Car[] = []\n\n\tpublic itensFilter: Filter = new Filter ([],[],[],[],[],[])\n\tpublic itensFilter2: Filter = new Filter ([],[],[],[],[],[]);\n\n\tpublic itensFilterChecked: Filter = new Filter([],[],[],[],[],[])\n\n\tpublic filterLocations: any = []\n\tpublic filterLocations2: any = [];\n\n\tpublic originalFilterList: Filter = new Filter ([],[],[],[],[],[])\n\n\tpublic activeModal: boolean = false\n\n\tpublic orderItem: string = 'Menor preço'\n\n\tpublic arrayOptions: Array<string> = []\n\n  private sub = new SubSink();\n\n  public priceData = {\n    firstPrice: {\n      name: 'Até R$1.500',\n      value: 1500\n    },\n    secondPrice: {\n      name: 'De R$1.500 até R$2.000',\n      value: 2000\n    },\n    thirdPrice: {\n      name: 'De R$2.000 até R$5.000',\n      value: 5000\n    },\n    fourthPrice: {\n      name: 'Mais de R$5.000',\n      value: 5001\n    }\n  }\n\n  public carsLoading: boolean = true\n\n  public contentLoad: boolean = false;\n\n  @Output() carsLoaded : EventEmitter<boolean> = new EventEmitter();\n\n  public breadCrumbs: IBreadcrumb[] = [\n    {\n      id: 'breadCrumbLinkBusca',\n      label: 'Resultado da busca',\n      link: '/assinatura/busca'\n    }\n  ];\n\n\tconstructor(//private renderer:Renderer2,\n    private filtersService: MenuService,\n    private vitrineService: VitrineService,\n    private router: Router,\n    private activeRoute: ActivatedRoute,\n  ) {\n\t}\n\n\tngOnInit() {\n    this.getValueFilter();\n\t\tthis.restCars = ((this.cars.length%4).toString() + (this.cars.length%3).toString());\n\n    /* setTimeout(() => {\n      window.scrollTo(0, 500);\n    }, 1000);\n    setTimeout(() => {\n      window.scrollTo(0, 0);\n    }, 3000); */\n\t}\n\n  getValueFilter() {\n    this.filtersService.getFilters().subscribe(res => {\n      this.filterLocations = res.data.location.map((location) => {\n        return location\n      });\n      this.getCarsForShowcase()\n    }, ex => {\n    })\n  }\n\n  filterMount(value, column, fipe, group) {\n    const index = column.findIndex(item => item.name == value)\n\n    if(index != -1) {\n      column[index].fipes.push(fipe)\n    } else {\n      if(group == 'locations'){\n        column.push({\n          name: value,\n          fipes: [fipe],\n          checked: false,\n          group: group\n        })\n      } else {\n        column.push({\n          name: value,\n          fipes: [fipe],\n          checked: false,\n          group: group\n        })\n      }\n    }\n  }\n\n  mountPriceFilter(value, fipe) {\n    const {firstPrice, secondPrice, thirdPrice, fourthPrice} = this.priceData\n\n    if(value <= firstPrice.value) {\n      const index = this.getIndexByArray(this.itensFilter.prices, firstPrice.name)\n      if(index != -1) {\n        this.updateValueInListPrice(index, fipe)\n      } else {\n        this.pushValueInListPrice(firstPrice.name, fipe, firstPrice.value)\n      }\n    } else if(value > firstPrice.value && value <= secondPrice.value) {\n      const index = this.getIndexByArray(this.itensFilter.prices, secondPrice.name)\n      if(index != -1) {\n        this.updateValueInListPrice(index, fipe)\n      } else {\n        this.pushValueInListPrice(secondPrice.name, fipe, secondPrice.value)\n      }\n    } else if(value > secondPrice.value && value <= thirdPrice.value) {\n      const index = this.getIndexByArray(this.itensFilter.prices, thirdPrice.name)\n      if(index != -1) {\n        this.updateValueInListPrice(index, fipe)\n      } else {\n        this.pushValueInListPrice(thirdPrice.name, fipe, thirdPrice.value)\n      }\n    } else {\n      const index = this.getIndexByArray(this.itensFilter.prices, fourthPrice.name)\n\n      if(index != -1) {\n        this.updateValueInListPrice(index, fipe)\n      } else {\n        this.pushValueInListPrice(fourthPrice.name, fipe, fourthPrice.value)\n      }\n    }\n  }\n\n  getIndexByArray(array, value) {\n    return array.findIndex(item => item.name == value)\n  }\n\n  pushValueInListPrice(name, fipe, order) {\n    this.itensFilter.prices.push({\n      name: name,\n      fipes: [fipe],\n      order: order,\n      group: 'prices'\n    })\n  }\n\n  updateValueInListPrice(index, fipe) {\n    this.itensFilter.prices[index].fipes.push(fipe)\n  }\n\n  processUrl(url) {\n    let typeSearch = this.searchType(url);\n    let search = '';\n    if (typeSearch == 'categories') {\n      search = this.activeRoute.snapshot.paramMap.get('category');\n\n      this.checkFilter(typeSearch, search);\n    } else if (typeSearch == 'brands') {\n      search = this.activeRoute.snapshot.paramMap.get('brand');\n\n      this.checkFilter(typeSearch, search);\n    } else if (typeSearch == 'terms') {\n      search = this.activeRoute.snapshot.queryParamMap['params'].terms;\n\n      this.doSearchTerms(search);\n    } else {\n    }\n  }\n\n  searchType(url) {\n    let indexCategoria = url.search('categoria');\n    if (indexCategoria > -1) { return 'categories' }\n\n    let indexMarca = url.search('marca');\n    if (indexMarca > -1) { return 'brands' }\n\n    let indexTerms = url.search('terms');\n    if (indexTerms > -1) { return 'terms' }\n  }\n\n  checkFilter(type, search) {\n    let filterIndex = this.itensFilter[type].findIndex(item => item.name.toLowerCase() == search);\n    if (filterIndex > -1) {\n      this.itensFilter[type][filterIndex].checked = true;\n      this.doSearch(this.itensFilter[type][filterIndex]);\n    }\n  }\n\n  doSearch(search) {\n    this.arrayOptions.push(search)\n    this.countItemTrue += 1\n\t\tthis.itensFilterChecked[search.group] = [...this.itensFilterChecked[search.group],...search.fipes]\n    this.applyFilterArrayCars()\n  }\n\n  doSearchTerms(search){\n    this.arrayOptions.push(search);\n\n    this.cars = this.cars.filter((car) => {\n      let brand = car.brand.toLocaleLowerCase();\n      let detail = car.detail.toLocaleLowerCase();\n      let searchLower = search.toLocaleLowerCase();\n      return brand.includes(searchLower) || detail.includes(searchLower);\n    });\n  }\n\n  /* NOVA FUNÇÃO QUE MOSTRA OS DADOS DOS CARROS NA VITRINE */\n  getCarsForShowcase() {\n\t\tlet pickape_today = moment().add(1, 'day').format('DD/MM/YYYY 23:59');\n    let pickape_return = moment().add(1441, 'days').format('DD/MM/YYYY 23:59');\n    this.sub.sink = this.vitrineService.getShowcaseV2(pickape_today, pickape_return, \"380\", \"380\").subscribe(res => {\n      this.cars = res.data.VehAvailRSCore.VehVendorAvails.VehVendorAvail.VehAvails.map((vehicle, index) => {\n        const deadline = vehicle.VehAvail.VehAvailCore.Vehicle.Deadline\n        const locations = vehicle.VehAvail.VehAvailCore.Vehicle.Filiais;\n        const brand = vehicle.VehAvail.VehAvailCore.Vehicle.VehMakeModel.Name.split(' ')[0]\n        const transmission = vehicle.VehAvail.VehAvailCore.Vehicle.TransmissionType\n        const category = vehicle.VehAvail.VehAvailCore.Vehicle.Categoria\n        const price = vehicle.VehAvail.VehAvailCore.TotalCharge.Periods[0].valor_mensal_total\n        const fipe = vehicle.VehAvail.VehAvailCore.Vehicle.FipeCode\n\n        this.filterMount(deadline, this.itensFilter.availabilities, fipe, 'availabilities')\n\n        for (let location of locations) {\n          let locationIndex = this.filterLocations.findIndex(item => item.FilialID == location);\n          let locationName = '';\n          if (locationIndex > -1) {\n            locationName = this.filterLocations[locationIndex].Abreviatura;\n          }\n          let locationTransformed = this.transformLocationName(locationName);\n          this.filterMount(locationTransformed, this.itensFilter.locations, fipe, 'locations')\n        }\n\n        this.filterMount(brand, this.itensFilter.brands, fipe, 'brands')\n        this.filterMount(transmission, this.itensFilter.transmissions, fipe, 'transmissions')\n        this.filterMount(category, this.itensFilter.categories, fipe, 'categories')\n        this.mountPriceFilter(price, fipe);\n\n        return {\n              brand: brand,\n              //model: model.replace(model.split(' ')[0], \"\"),\n              model: vehicle.VehAvail.VehAvailCore.Vehicle.VehMakeModel.Name.split(' ')[1],\n              detail: vehicle.VehAvail.VehAvailCore.Vehicle.Description,\n              promotionValue: vehicle.VehAvail.VehAvailCore.TotalCharge.Periods[0].valor_mensal_total,\n              value: vehicle.VehAvail.VehAvailCore.TotalCharge.Periods[1] ? vehicle.VehAvail.VehAvailCore.TotalCharge.Periods[1].valor_mensal_total:0,\n              //image: 'assets/img/vehicles/argo-new.png', // imagem temporaria\n              image: vehicle.VehAvail.VehAvailCore.Vehicle.Image,\n              fipe: vehicle.VehAvail.VehAvailCore.Vehicle.FipeCode,\n              msgComPromo: vehicle.VehAvail.VehAvailCore.VehAvailInfo.MessagePromocaoVeiculo\n            }\n      });\n\n      this.copyOriginalArrays();\n      this.itensFilter.prices.sort((a, b) => a.order - b.order)\n      this.itensFilter.brands.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      });\n      this.itensFilter.locations.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      });\n      this.processUrl(this.router.url);\n      this.changeItemModal('Menor preço', this.cars, false)\n\n      this.itensFilter2 = this.itensFilter;\n      this.filterLocations2 = this.filterLocations;\n\n      this.carsLoaded.emit(true);\n      this.contentLoad = true;\n        }, ex => {\n      })\n  }\n\n  transformLocationName(location) {\n    let location_split = location.split(' ');\n    let location_array = location_split.map(function(n){\n      return n.charAt(0).toUpperCase() + n.slice(1).toLowerCase()\n    });\n    return location_array.join(' ');\n  }\n\n\tshowModal() {\n\t\tif(this.activeModal) {\n\t\t\tthis.activeModal = false\n      document.getElementsByTagName('body')[0].style['overflow-y'] = '';\n      document.getElementsByTagName('body')[0].style['position'] = '';\n\t\t} else {\n      this.activeModal = true\n      document.getElementsByTagName('body')[0].style['overflow-y'] = 'hidden';\n      document.getElementsByTagName('body')[0].style['position'] = 'relative';\n\t\t}\n\t}\n\n  changeItemModal(item: string, array = this.cars, modal = true) {\n\t\tthis.orderItem = item\n\t\tif (this.orderItem == 'Menor preço') {\n\t\t\tarray.sort(function (a, b) {\n\t\t\t\tif (a.promotionValue > b.promotionValue) {\n\t\t\t\t  return 1;\n\t\t\t\t}\n\t\t\t\tif (a.promotionValue < b.promotionValue) {\n\t\t\t\t  return -1;\n\t\t\t\t}\n\t\t\t\t// a must be equal to b\n\t\t\t\treturn 0;\n\t\t\t  });\n\t\t}\n\t\tif (this.orderItem == 'Maior preço') {\n\t\t\tarray.sort(function (a, b) {\n\t\t\t\tif (a.promotionValue < b.promotionValue) {\n\t\t\t\t  return 1;\n\t\t\t\t}\n\t\t\t\tif (a.promotionValue > b.promotionValue) {\n\t\t\t\t  return -1;\n\t\t\t\t}\n\t\t\t\t// a must be equal to b\n\t\t\t\treturn 0;\n\t\t\t  });\n\t\t}\n\t\tif (this.orderItem == 'Alfabética (A-Z)') {\n\t\t\tarray.sort(function (a, b) {\n\t\t\t\tif (a.model > b.model) {\n\t\t\t\t  return 1;\n\t\t\t\t}\n\t\t\t\tif (a.model < b.model) {\n\t\t\t\t  return -1;\n\t\t\t\t}\n\t\t\t\t// a must be equal to b\n\t\t\t\treturn 0;\n\t\t\t  });\n\t\t}\n\t\tif(modal) {\n\t\t\tthis.showModal()\n\t\t}\n\t}\n\n  createItensChecked(event, itemChecked, filterGroup) {\n\t\titemChecked.checked = event\n\t\tconst array = this.itensFilterChecked\n\t\tif(event) {\n\t\t\tthis.countItemTrue += 1\n\t\t\tarray[filterGroup] = [...array[filterGroup],...itemChecked.fipes]\n\t\t} else {\n\t\t\tthis.countItemTrue -= 1\n\t\t\tarray[filterGroup] = array[filterGroup].filter(item => itemChecked.fipes.indexOf(item) == -1)\n\t\t}\n\t}\n\n\tapplyFilters(checked) {\n\t\tconst [event, itemChecked, filterGroup] = checked\n\t\tthis.createItensChecked(event.target.checked, itemChecked, filterGroup)\n\t\t//document.getElementById('type-card-'+this.restCars).removeAttribute('type-card-'+this.restCars)\n\t\tthis.copyOriginalArrays()\n\t\tthis.changeItemModal(this.orderItem, this.originalCarList, false)\n\t\tif(itemChecked.checked) {\n\t\t\tthis.arrayOptions.push(itemChecked)\n\t\t} else {\n\t\t\tlet index = this.arrayOptions.indexOf(itemChecked)\n\t\t\tif(index > -1){\n\t\t\t\tthis.arrayOptions.splice(index, 1)\n\t\t\t}\n\t\t}\n\t\tthis.applyFilterArrayCars()\n\t}\n\n  getListOfCars(array1, array2){\n\t\tif(array2.length > 0) {\n\t\t\treturn [...array1.filter(item =>  array2.indexOf(item.fipe) != -1)]\n\t\t} else {\n\t\t\tif(this.countItemTrue > 0) {\n\t\t\t\treturn [...array1.filter(item =>  array2.indexOf(item.fipe) != -1)]\n\t\t\t} else {\n\t\t\t\treturn array1\n\t\t\t}\n\t\t}\n\t}\n\n  getListOfFilters(array1, array2){\n\t\tif(array2.length > 0) {\n\t\t\treturn array1.filter(item =>  array2.indexOf(item) != -1)\n\t\t}\n\t\treturn array1\n\t}\n\n  mountNewFilter(array1, arra2){\n\t\treturn array1.map(location => {\n\t\t\tlocation.fipes = this.getListOfFilters(location.fipes, arra2)\n\t\t\treturn location\n\t\t})\n\t}\n\n  copyOriginalArrays() {\n\t\tif(this.originalCarList.length < 1) {\n\t\t\tthis.originalCarList = [...this.cars]\n\t\t\tthis.originalFilterList = {...this.itensFilter}\n\t\t}\n\t}\n\n\tremoveFilterOption(item){\n    if (item.name) {\n      this.createItensChecked(false, item, item.group)\n      let indexOptions = this.arrayOptions.indexOf(item)\n      if(indexOptions > -1){\n        this.arrayOptions.splice(indexOptions, 1)\n      }\n      let index = this.itensFilter[item.group].findIndex(itemFilter => itemFilter.name == item.name)\n      if(index > -1){\n        this.itensFilter[item.group][index].checked = false\n      }\n      this.applyFilterArrayCars()\n    } else {\n      let indexOptions = this.arrayOptions.indexOf(item)\n      if(indexOptions > -1){\n        this.arrayOptions.splice(indexOptions, 1);\n      }\n      // this.cars = this.originalCarList;\n      this.applyFilterArrayCars();\n    }\n\t}\n\n\tapplyFilterArrayCars() {\n\t\tlet groups = []\n\t\tconst intersectSets = (a, b) => {\n\t\t\tconst c = new Set;\n\t\t\ta.forEach(v => b.has(v) && c.add(v));\n\t\t\treturn c;\n\t\t};\n\t\tlet isEmpty = true\n\t\tfor (let group in this.itensFilterChecked) {\n\t\t\tif(this.itensFilterChecked[group].length > 0) {\n\t\t\t\tgroups.push(new Set(this.itensFilterChecked[group]))\n\t\t\t\tisEmpty = false\n\t\t\t}\n\t\t}\n\t\tif(!isEmpty) {\n\t\t\tgroups = Array.from(groups.reduce(intersectSets));\n\t\t}\n\t\tthis.cars = this.getListOfCars(this.originalCarList, groups)\n\t\tthis.restCars = ((this.cars.length%4).toString() + (this.cars.length%3).toString())\n\t}\n}\n","<div *ngIf=\"carsLoading\">\n  <app-skeleton-loader [showcaseAllCars]=\"true\"></app-skeleton-loader>\n</div>\n<div class=\"container-show-result\">\n  <movida-show-result (carsLoaded)=\"setCarsLoading($event)\"></movida-show-result>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShowcaseAllCarsComponent } from './showcase-all-cars.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ShowcaseAllCarsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShowcaseAllCarsRoutingModule { }","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'showcase-all-cars',\n  templateUrl: './showcase-all-cars.component.html',\n  styleUrls: ['./showcase-all-cars.component.scss']\n})\nexport class ShowcaseAllCarsComponent implements OnInit {\n\n  carsLoading : boolean = true;\n\n  constructor(\n  ){}\n\n  ngOnInit() {\n  }\n\n  setCarsLoading($event) {\n    this.carsLoading = false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { MovidaShowResultModule } from 'projects/zkm-components/src/public-api';\nimport { ShowcaseAllCarsComponent } from './showcase-all-cars.component';\n//modules\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { ShowcaseAllCarsRoutingModule } from './showcase-all-cars-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n    imports: [\n      ShowcaseAllCarsRoutingModule,\n      CommonModule,\n      MovidaShowResultModule,\n      SharedModule\n    ],\n    declarations: [\n        ShowcaseAllCarsComponent,\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n      ],\n  })\n  export class ShowcaseAllCarsModule { }\n"],"sourceRoot":"webpack:///","file":"src_app_pages_shocase-all-cars_showcase-all-cars_module_ts.js"}