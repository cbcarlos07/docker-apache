{"version":3,"mappings":"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","names":["SeoService","constructor","document","createLinkForCanonicalURL","this","querySelectorAll","setAttribute","URL","i0","DOCUMENT","factory","QuotationService","checkInArray","itemName","list","existsInArray","forEach","item","Descricao","getProductId","sigla","getProductVetorId","getProductPriceId","getCoinsurance","groupId","protectionCode","coinsuranceCode","Array","MB0KM","MC0KM","coinsurances","JSON","parse","localStorage","getItem","protectionCoinsurance","filter","opt","coinsuranceValue","valores","grupo_id","valor","getBookingPayload","carOpt","protections","equipments","conductors","push","codigo","protection","extraProtections","additionalServices","_","drivers","driver","cpf","nome","sobrenome","tipo","quantidade","x","length","withdrawalDate","moment","add","returnDate","period","dias","parseInt","meses","toString","bookingPayload","data_retirada","format","data_devolucao","local_retirada","local_devolucao","codigo_veiculo","acriss","undefined","mileage","protecoes","equipamentos","condutores","vitrine","franquia","coupon","getPromotion","infoVehicle","monthValuePrevious","monthPrevious","data","periods","TotalCharge","Periods","month","valor_mensal","value_month_promo","value_normal","valor_mensal_total","promo_month","value_day","valor_diaria","total_days","diarias","car_promo","Vehicle","FipeCode","is_promo","getPromotionMonths","ValorTotal","getBackupCarAmount","pricedEquips","backupCar","PricedEquip","Equipment","Sigla","Charge","IncludedInRate","parseFloat","Amount","err","ValidatorService","RegExp","isValidTel","g","num","value","telNotValid","isValidCel","celNotValid","isValidCep","cepNotValid","isValidCpf","numbers","digits","sum","i","result","equalDigits","charAt","cpfNotValid","substring","Number","repetitionValidator","control","parent","duplicated","key","controls","each","get","isValidPswd","pswdControl","test","pswdMaxSix","pswdOnlyNumbers","checkNumbers","event","regexNumbers","preventDefault","checkCep","callback","target","replace","checkCPF","string","checkLetters","previousKey","String","fromCharCode","regexLetters","checkEnterPress","dadosForm","field","markAsTouched","markAsDirty","checkIsOnlyNumbers","regexOnlyNumbers","checkFormControls","getOnlyNumbers","OrangeCheckComponent","ngOnInit","selectors","OrangeIcon1Component","OrangeIcon2Component","GrayIcon2Component","OrangeIcon3Component","GrayIcon3Component","StepsTimelineComponent","id","active","current","label","activeImg","checkedImg","displayImg","defaultImg","currentStep","_currentStep","setStatusTimeline","isOnDemand","_isOnDemand","statusTimeline","step","currentIdx","map","indexOf","statusStep","idx","getFormattedNum","getBRLCurrency","price","Intl","NumberFormat","style","currency","getCurrency","toLocaleString","minimumFractionDigits"],"sources":["./src/app/core/services/header/seo.service.ts","./src/app/core/services/quotation.service.ts","./src/app/core/services/validator.service.ts","./src/app/icons/orange-check.component.ts","./src/app/icons/orange-icon-1.component.ts","./src/app/icons/orange-icon-2.component.ts","./src/app/icons/gray-icon-2.component.ts","./src/app/icons/orange-icon-3.component.ts","./src/app/icons/gray-icon-3.component.ts","./src/app/shared/steps-timeline/steps-timeline.component.html","./src/app/shared/steps-timeline/steps-timeline.component.ts","./src/app/util/formatNumber.util.ts"],"sourcesContent":["/**\n * @author\n * Movida S.A\n * @link \n * https://www.movida.com.br/\n * @license\n * Copyright Movida S.A All Rights Reserved.\n */\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SeoService {\n\n    constructor(\n        @Inject(DOCUMENT) private document\n    ) { }\n\n    public createLinkForCanonicalURL(): void {\n        const canonicalLink: HTMLLinkElement = this.document.querySelectorAll('[rel=\"canonical\"]')[0];        \n        canonicalLink.setAttribute('href', this.document.URL);\n    }\n}","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuotationService {\n\n  constructor() { }\n\n  checkInArray(itemName, list): boolean {\n    let existsInArray: boolean = false;\n    list.forEach(item => {\n      if (item.Descricao === itemName) {\n        existsInArray = true;\n      }\n    });\n    return existsInArray;\n  }\n\n  getProductId(sigla) {\n    switch (sigla) {\n      case 'ADD': return 1;\n      case 'CFR': return 4;\n      case 'CZKM': return 8;\n      case 'MB0KM': return 1;\n      case 'MC0KM': return 2;\n      case 'WDW1': return 4;\n      case 'WDWP1': return 5;\n      case 'SPZKM': return 215;\n      case 'OSZKM': return 216;\n    }\n  }\n\n  getProductVetorId(sigla) {\n    switch (sigla) {\n      case 'ADD': return 39;\n      case 'CFR': return 59;\n      case 'CZKM': return 96;\n      case 'SPZKM': return 218;\n      case 'OSZKM': return 247;\n    }\n  }\n\n  getProductPriceId(sigla) {\n    switch (sigla) {\n      case 'ADD': return 331;\n      case 'CFR': return 775;\n      case 'CZKM': return 1783;\n      case 'MB0KM': return 157;\n      case 'MC0KM': return 158;\n      case 'WDW1': return 160;\n      case 'WDWP1': return 161;\n      case 'SPZKM': return 278;\n      case 'OSZKM': return 278;\n    }\n  }\n\n  getCoinsurance(groupId, protectionCode) {\n    const coinsuranceCode = new Array();\n    coinsuranceCode['MB0KM'] = 'CPBZKM';\n    coinsuranceCode['MC0KM'] = 'CPCZKM';\n    const coinsurances = JSON.parse(localStorage.getItem('coinsurances'));\n    const protectionCoinsurance = coinsurances ? coinsurances.filter(opt => opt.sigla === coinsuranceCode[protectionCode])[0] : null;\n    const coinsuranceValue = protectionCoinsurance ? protectionCoinsurance.valores.filter(opt => opt.grupo_id === groupId)[0] : null;\n    return coinsuranceValue ? coinsuranceValue.valor : null;\n  }\n\n  getBookingPayload(carOpt) {\n    let protections = [];\n    let equipments = [];\n    let conductors = [];\n    //let qtdDays;\n\n    protections.push({ codigo: carOpt.protection.sigla });\n\n    carOpt.extraProtections.forEach(item => {\n      protections.push({ codigo: item.sigla });\n    });\n\n    if (carOpt.additionalServices) {\n      carOpt.additionalServices.forEach(item => {\n        if (item.sigla === 'ADD') {\n          if (item.drivers) {\n            item.drivers.forEach(driver => {\n              if (driver.cpf !== null) {\n                conductors.push({ nome: 'Condutor', sobrenome: 'Adicional', cpf: driver.cpf });\n              }\n            });\n          } else {\n            conductors = [];\n          }\n        } else {\n          equipments.push({ tipo: item.sigla, quantidade: '1' });\n        }\n      });\n    }\n\n    if (!equipments.filter(x => x.tipo === 96).length) {\n      equipments.push({ tipo: 96, quantidade: '1' })\n    }\n\n    const withdrawalDate = moment().add(1, 'day');\n\n    let returnDate = moment(withdrawalDate).add(carOpt.period && carOpt.period.dias ? carOpt.period.dias : parseInt(carOpt.period.meses) * 30, 'days');\n\n    if(withdrawalDate.toString() === returnDate.toString()){\n      returnDate = moment(withdrawalDate).add(1440, 'days');\n    }\n\n    let bookingPayload = {\n      'data_retirada': withdrawalDate.format('DD/MM/YYYY 10:00'),\n      'data_devolucao': returnDate.format('DD/MM/YYYY 10:00'),\n      'local_retirada': '380',\n      'local_devolucao': '380',\n      \"with-unavailable\": true,\n      'codigo_veiculo': carOpt.acriss,\n      'sigla': carOpt.mileage.valor === undefined ? \"\" : carOpt.mileage.valor.sigla,\n      'protecoes': protections,\n      'equipamentos': equipments,\n      'condutores': conductors,\n      'vitrine': false,\n      'franquia': null\n    }\n\n    const coupon = localStorage.getItem('CPN');\n    if (coupon) {\n      bookingPayload['coupon'] = coupon;\n    }\n\n    return bookingPayload;\n  }\n\n  getPromotion(infoVehicle) {\n\n    let periods = infoVehicle.TotalCharge.Periods\n    let monthValuePrevious = 0;\n    let monthPrevious = 0;\n    let data = {};\n\n    periods.forEach(month => {\n      if (month.valor_mensal != monthValuePrevious && monthPrevious > 0) {\n        data = {\n          \"value_month_promo\": monthValuePrevious,\n          \"value_normal\": month.valor_mensal,\n          \"valor_mensal_total\": month.valor_mensal_total,\n          \"promo_month\": monthPrevious,\n          \"value_day\": month.valor_diaria,\n          \"total_days\": month.diarias,\n          \"car_promo\": infoVehicle.Vehicle.FipeCode,\n          \"is_promo\": true\n        }\n      }\n      monthValuePrevious = month.valor_mensal;\n      monthPrevious++;\n    });\n\n    return data;\n\n  }\n\n  getPromotionMonths(periods) {\n\n    let monthValuePrevious = 0;\n    let monthPrevious = 0;\n    let data = {};\n\n    periods.forEach(month => {\n      if (month.ValorTotal != monthValuePrevious && monthPrevious > 0) {\n        data = {\n          \"value_month_promo\": monthValuePrevious,\n          \"value_normal\": month.ValorTotal,\n          \"promo_month\": monthPrevious,\n          \"valor_mensal_total\": month.valor_mensal_total,\n          \"is_promo\": true\n        }\n      }\n      monthValuePrevious = month.ValorTotal;\n      monthPrevious++;\n    });\n\n    return data;\n\n  }\n\n  getBackupCarAmount(pricedEquips) {\n    try {\n      const backupCar = pricedEquips.filter(x => x.PricedEquip.Equipment.Sigla === 'CZKM')[0];\n      return backupCar.PricedEquip.Charge.IncludedInRate === 'true' ? parseFloat(backupCar.PricedEquip.Charge.Amount) : 0;\n    } catch (err) {\n      return 0;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n  previousKey = null;\n  private regexNumbers = RegExp('[0-9]');\n  private regexLetters = RegExp('[a-zA-Z]');\n  private regexOnlyNumbers = RegExp('^[0-9]*$');\n\n  constructor() {}\n\n  isValidTel(g: FormControl) {\n    const num = g.value;\n    if (num.length === 0 || num.length === 10) {\n      return null;\n    } else {\n      return { telNotValid: true };\n    }\n  }\n\n  isValidCel(g: FormControl) {\n    const num = g.value;\n    if (num.length === 11) {\n      return null;\n    } else {\n      return { celNotValid: true };\n    }\n  }\n\n  isValidCep(g: FormControl) {\n    const num = g.value;\n    if (num.length === 8) {\n      return null;\n    } else {\n      return { cepNotValid: true };\n    }\n  }\n\n  isValidCpf(g: FormControl) {\n    const cpf = g.value;\n    if (cpf) {\n      let numbers, digits, sum, i, result, equalDigits;\n      equalDigits = 1;\n      if (cpf.length < 11) {\n        return null;\n      }\n\n      for (i = 0; i < cpf.length - 1; i++) {\n        if (cpf.charAt(i) !== cpf.charAt(i + 1)) {\n          equalDigits = 0;\n          break;\n        }\n      }\n\n      if (!equalDigits) {\n        numbers = cpf.substring(0, 9);\n        digits = cpf.substring(9);\n        sum = 0;\n        for (i = 10; i > 1; i--) {\n          sum += numbers.charAt(10 - i) * i;\n        }\n\n        result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n        if (result !== Number(digits.charAt(0))) {\n          return { cpfNotValid: true };\n        }\n        numbers = cpf.substring(0, 10);\n        sum = 0;\n\n        for (i = 11; i > 1; i--) {\n          sum += numbers.charAt(11 - i) * i;\n        }\n        result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n        if (result !== Number(digits.charAt(1))) {\n          return { cpfNotValid: true };\n        }\n        return null;\n      } else {\n        return { cpfNotValid: true };\n      }\n    }\n    return null;\n  }\n\n  repetitionValidator(control: FormControl) {\n    let parent = control.parent;\n\n    if (!parent) return null;\n\n    var duplicated = false;\n\n    for (let key in parent.controls) {\n      let each = parent.get(key);\n      if (\n        control != each &&\n        control.value != '' &&\n        control.value != null &&\n        control.value == each.value\n      ) {\n        duplicated = true;\n      }\n    }\n\n    return duplicated ? { duplicated: true } : null\n  }\n\n  isValidPswd(pswdControl: FormControl) {\n    if ((/^\\d+(?:\\.\\d+)?$/).test(pswdControl.value) && pswdControl.value.length === 6) {\n      return null;\n    } else if (!(/^\\d+(?:\\.\\d+)?$/).test(pswdControl.value)) {\n      return { pswdOnlyNumbers: true };\n    } else {\n      return { pswdMaxSix: true };\n    }\n  }\n\n  checkNumbers(event) {\n    if (!this.regexNumbers.test(event.key) && event.key !== 'Backspace' && event.key !== 'Tab') {\n      event.preventDefault();\n    }\n  }\n\n  checkCep(event, callback) {\n    if (\n      !this.regexNumbers.test(event.key) &&\n      event.key !== 'Backspace' &&\n      event.key !== 'Tab'\n    ) {\n      event.preventDefault();\n    } else {\n      let value = event.target.value;\n      if (event.key === 'Backspace') {\n        value = value.substring(0, value.length - 1);\n      }\n      if (event.key !== 'Backspace') {\n        value += event.key;\n      }\n      value = value.replace('-', '');\n      if (value.length >= 8) {\n        callback(true);\n      } else {\n        callback(false);\n      }\n    }\n  }\n\n  checkCPF(string) {\n    const cpf = string;\n    if (cpf) {\n      let numbers, digits, sum, i, result, equalDigits;\n      equalDigits = 1;\n      if (cpf.length < 11) {\n        return false;\n      } else {\n        for (i = 0; i < cpf.length - 1; i++) {\n          if (cpf.charAt(i) !== cpf.charAt(i + 1)) {\n            equalDigits = 0;\n            break;\n          }\n        }\n\n        if (!equalDigits) {\n          numbers = cpf.substring(0, 9);\n          digits = cpf.substring(9);\n          sum = 0;\n          for (i = 10; i > 1; i--) {\n            sum += numbers.charAt(10 - i) * i;\n          }\n\n          result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n          if (result !== Number(digits.charAt(0))) {\n            return false;\n          } else {\n            numbers = cpf.substring(0, 10);\n            sum = 0;\n\n            for (i = 11; i > 1; i--) {\n              sum += numbers.charAt(11 - i) * i;\n            }\n            result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n\n            if (result !== Number(digits.charAt(1))) {\n              return false;\n            } else {\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  }\n\n  checkLetters(event) {\n    if (\n      this.previousKey === String.fromCharCode(32) &&\n      event.key === String.fromCharCode(32)\n    ) {\n      event.preventDefault();\n    } else if (event.key === String.fromCharCode(32)) {\n      this.previousKey = event.key;\n    } else if (!this.regexLetters.test(event.key)) {\n      event.preventDefault();\n    } else {\n      this.previousKey = event.key;\n    }\n  }\n\n  checkEnterPress(event, dadosForm) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      for (const field in dadosForm.controls) {\n        dadosForm.controls[field].markAsTouched();\n        dadosForm.controls[field].markAsDirty();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkIsOnlyNumbers(string) {\n    return this.regexOnlyNumbers.test(string);\n  }\n\n  checkFormControls(dadosForm) {\n    for (const field in dadosForm.controls) {\n      dadosForm.controls[field].markAsTouched();\n      dadosForm.controls[field].markAsDirty();\n    }\n  }\n\n  getOnlyNumbers(string: string) {\n    return string.replace(/[^0-9]+/g, '');\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icone-orange-check',\n  template: `<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.alt]=\"alt\" [attr.title]=\"title\" width=\"13.88\" height=\"13.88\" viewBox=\"0 0 13.88 13.88\"><circle class=\"a\" cx=\"6.94\" cy=\"6.94\" r=\"6.94\"/><path class=\"b\" d=\"M-4273.836-325.893l-4.848,4.882-3.046-3.143,1.24-1.214,1.806,1.8,3.613-3.645Z\" transform=\"translate(4284.611 331.365)\"/></svg>`,\n  styles: ['.a{fill:#f97d00;}.b{fill:#fff;}']\n})\nexport class OrangeCheckComponent implements OnInit {\n\n  @Input() alt : String = \"\";\n  @Input() title : String = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icone-orange-1',\n  template: `<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.alt]=\"alt\" [attr.title]=\"title\" width=\"13.882\" height=\"13.883\" viewBox=\"0 0 13.882 13.883\"><g id=\"Grupo_14080\" data-name=\"Grupo 14080\" transform=\"translate(6975 1546)\"><g id=\"Grupo_14078\" data-name=\"Grupo 14078\" transform=\"translate(-7125 -1614)\"><g id=\"Grupo_14085\" data-name=\"Grupo 14085\" transform=\"translate(150 68)\"><g id=\"Grupo_13406\" data-name=\"Grupo 13406\"><g id=\"Elipse_292\" data-name=\"Elipse 292\" transform=\"translate(0 0)\" fill=\"#fff\" stroke=\"#f97d00\" stroke-width=\"1\"><circle cx=\"6.941\" cy=\"6.941\" r=\"6.941\" stroke=\"none\"/><circle cx=\"6.941\" cy=\"6.941\" r=\"6.441\" fill=\"none\"/></g></g><text id=\"_1\" data-name=\"1\" transform=\"translate(4.131 10.371)\" fill=\"#f97d00\" font-size=\"10\" font-family=\"Roboto-Bold, Roboto\" font-weight=\"700\"><tspan x=\"0\" y=\"0\">1</tspan></text></g></g></g></svg>`,\n})\nexport class OrangeIcon1Component implements OnInit {\n\n  @Input() alt : String = \"\";\n  @Input() title : String = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icone-orange-2',\n  template: `<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.alt]=\"alt\" [attr.title]=\"title\" width=\"13.882\" height=\"13.883\" viewBox=\"0 0 13.882 13.883\"><g id=\"Grupo_14083\" data-name=\"Grupo 14083\" transform=\"translate(6733 1481)\"><g id=\"Grupo_14081\" data-name=\"Grupo 14081\" transform=\"translate(-6750.524 -1481)\"><text id=\"_5\" data-name=\"5\" transform=\"translate(22.558 10.371)\" fill=\"#dcdcdc\" font-size=\"10\" font-family=\"Roboto-Bold, Roboto\" font-weight=\"700\"><tspan x=\"0\" y=\"0\">5</tspan></text><g id=\"Grupo_14084\" data-name=\"Grupo 14084\" transform=\"translate(17.524)\"><g id=\"Grupo_13406\" data-name=\"Grupo 13406\"><g id=\"Elipse_292\" data-name=\"Elipse 292\" transform=\"translate(0 0)\" fill=\"#fff\" stroke=\"#f97d00\" stroke-width=\"1\"><circle cx=\"6.941\" cy=\"6.941\" r=\"6.941\" stroke=\"none\"/><circle cx=\"6.941\" cy=\"6.941\" r=\"6.441\" fill=\"none\"/></g></g><text id=\"_2\" data-name=\"2\" transform=\"translate(4.131 10.371)\" fill=\"#f97d00\" font-size=\"10\" font-family=\"Roboto-Bold, Roboto\" font-weight=\"700\"><tspan x=\"0\" y=\"0\">2</tspan></text></g></g></g></svg>`,\n})\nexport class OrangeIcon2Component implements OnInit {\n\n  @Input() alt : String = \"\";\n  @Input() title : String = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icone-gray-2',\n  template: `<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.alt]=\"alt\" [attr.title]=\"title\" width=\"13.882\" height=\"13.883\" viewBox=\"0 0 13.882 13.883\"><g id=\"Grupo_14086\" data-name=\"Grupo 14086\" transform=\"translate(6733 1481)\"><g id=\"Grupo_14081\" data-name=\"Grupo 14081\" transform=\"translate(-6750.524 -1481)\"><text id=\"_5\" data-name=\"5\" transform=\"translate(22.558 10.371)\" fill=\"#dcdcdc\" font-size=\"10\" font-family=\"Roboto-Bold, Roboto\" font-weight=\"700\"><tspan x=\"0\" y=\"0\">5</tspan></text><g id=\"Grupo_14084\" data-name=\"Grupo 14084\" transform=\"translate(17.524)\"><g id=\"Grupo_13406\" data-name=\"Grupo 13406\"><g id=\"Elipse_292\" data-name=\"Elipse 292\" transform=\"translate(0 0)\" fill=\"#fff\" stroke=\"#dcdcdc\" stroke-width=\"1\"><circle cx=\"6.941\" cy=\"6.941\" r=\"6.941\" stroke=\"none\"/><circle cx=\"6.941\" cy=\"6.941\" r=\"6.441\" fill=\"none\"/></g></g><text id=\"_2\" data-name=\"2\" transform=\"translate(4.131 10.371)\" fill=\"#dcdcdc\" font-size=\"10\" font-family=\"Roboto-Bold, Roboto\" font-weight=\"700\"><tspan x=\"0\" y=\"0\">2</tspan></text></g></g></g></svg>`,\n})\nexport class GrayIcon2Component implements OnInit {\n\n  @Input() alt : String = \"\";\n  @Input() title : String = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icone-orange-3',\n  template: `<svg id=\"Grupo_13725\" data-name=\"Grupo 13725\" [attr.alt]=\"alt\" [attr.title]=\"title\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.881\" height=\"13.881\" viewBox=\"0 0 13.881 13.881\"><g id=\"Grupo_13406\" data-name=\"Grupo 13406\"><g id=\"Elipse_292\" data-name=\"Elipse 292\" fill=\"#fff\" stroke=\"#f97d00\" stroke-width=\"1\"><circle cx=\"6.941\" cy=\"6.941\" r=\"6.941\" stroke=\"none\"/><circle cx=\"6.941\" cy=\"6.941\" r=\"6.441\" fill=\"none\"/></g></g><text id=\"_3\" data-name=\"3\" transform=\"translate(7 10.371)\" fill=\"#f97d00\" font-size=\"10\" font-family=\"Roboto-Bold, Roboto\" font-weight=\"700\"><tspan x=\"-2.869\" y=\"0\">3</tspan></text></svg>`,\n})\nexport class OrangeIcon3Component implements OnInit {\n\n  @Input() alt : String = \"\";\n  @Input() title : String = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icone-gray-3',\n  template: `<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.alt]=\"alt\" [attr.title]=\"title\" width=\"13.882\" height=\"13.883\" viewBox=\"0 0 13.882 13.883\"><g id=\"Grupo_14088\" data-name=\"Grupo 14088\" transform=\"translate(6491.275 1481)\"><g id=\"Grupo_14087\" data-name=\"Grupo 14087\" transform=\"translate(-6491.275 -1481)\"><g id=\"Grupo_13406\" data-name=\"Grupo 13406\"><g id=\"Elipse_292\" data-name=\"Elipse 292\" transform=\"translate(0 0)\" fill=\"#fff\" stroke=\"#dcdcdc\" stroke-width=\"1\"><circle cx=\"6.941\" cy=\"6.941\" r=\"6.941\" stroke=\"none\"/><circle cx=\"6.941\" cy=\"6.941\" r=\"6.441\" fill=\"none\"/></g></g><text id=\"_3\" data-name=\"3\" transform=\"translate(4.131 10.371)\" fill=\"#dcdcdc\" font-size=\"10\" font-family=\"Roboto-Bold, Roboto\" font-weight=\"700\"><tspan x=\"0\" y=\"0\">3</tspan></text></g></g></svg>`,\n})\nexport class GrayIcon3Component implements OnInit {\n\n  @Input() alt : String = \"\";\n  @Input() title : String = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"steps-timeline search-bar-spacer\">\n  <div class=\"container timeline\">\n    <div class=\"timeline__item\">\n      <div class=\"timeline__status\">\n        <hr class=\"timeline__hr default\">\n\n        <icone-orange-check class=\"timeline__img\" alt=\"Passo 1\" title=\"Etapa de Detalhes do veículo\" *ngIf=\"statusTimeline[0].active\"></icone-orange-check>\n\n        <icone-orange-1 class=\"timeline__img\" alt=\"Passo 1\" title=\"Etapa de Detalhes do veículo\" *ngIf=\"statusTimeline[0].current\"></icone-orange-1>\n\n        <hr class=\"timeline__hr\" [class.active]=\"statusTimeline[0].active\">\n      </div>\n      <label class=\"timeline__label\" [class.active]=\"statusTimeline[0].active || statusTimeline[0].current\">Detalhes</label>\n    </div>\n\n    <div class=\"timeline__item\">\n      <div class=\"timeline__status\">\n        <hr class=\"timeline__hr\" [class.active]=\"(statusTimeline[1].active || statusTimeline[1].current)\">\n\n        <icone-orange-check class=\"timeline__img\" alt=\"Passo 2\" title=\"Etapa de Login\" *ngIf=\"statusTimeline[1].active;\"></icone-orange-check>\n\n        <icone-orange-2 class=\"timeline__img\" alt=\"Passo 2\" title=\"Etapa de Login\" *ngIf=\"statusTimeline[1].current && !statusTimeline[1].active\"></icone-orange-2>\n\n        <icone-gray-2 class=\"timeline__img\" alt=\"Passo 2\" title=\"Etapa de Login\" *ngIf=\"!statusTimeline[1].current && !statusTimeline[1].active\"></icone-gray-2>\n\n        <hr class=\"timeline__hr\" [class.active]=\"statusTimeline[1].active\">\n      </div>\n      <label class=\"timeline__label\" [class.active]=\"statusTimeline[1].active || statusTimeline[1].current\">Login</label>\n    </div>\n\n    <div class=\"timeline__item\">\n      <div class=\"timeline__status\">\n        <hr class=\"timeline__hr\" [class.active]=\"(statusTimeline[2].active || statusTimeline[2].current)\">\n\n        <icone-orange-check class=\"timeline__img\" alt=\"Passo 3\" title=\"Etapa de Pagamento\" *ngIf=\"statusTimeline[2].active;\"></icone-orange-check>\n\n        <icone-orange-3 class=\"timeline__img\" alt=\"Passo 3\" title=\"Etapa de Pagamento\" *ngIf=\"statusTimeline[2].current && !statusTimeline[2].active\"></icone-orange-3>\n\n        <icone-gray-3 class=\"timeline__img\" alt=\"Passo 3\" title=\"Etapa de Pagamento\" *ngIf=\"!statusTimeline[2].current && !statusTimeline[2].active\"></icone-gray-3>\n\n        <hr class=\"timeline__hr default\" [class.active]=\"statusTimeline[2].active\">\n      </div>\n      <label class=\"timeline__label\" [class.active]=\"statusTimeline[2].active || statusTimeline[2].current\">Pagamento</label>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\nexport type IStatusTimeline = 'veiculo' | 'login' | 'pagamento' | 'foto' | 'cnh';\n\n@Component({\n  selector: 'app-steps-timeline',\n  templateUrl: './steps-timeline.component.html',\n  styleUrls: ['./steps-timeline.component.scss']\n})\nexport class StepsTimelineComponent implements OnInit {\n\n  private _currentStep: IStatusTimeline;\n  @Input('currentStep')\n  set currentStep(value: IStatusTimeline) {\n    this._currentStep = value;\n    this.setStatusTimeline(value);\n  }\n  get currentStep(): IStatusTimeline {\n    return this._currentStep;\n  }\n\n  private _isOnDemand: boolean;\n  @Input('isOnDemand')\n  set isOnDemand(value: boolean) {\n    this._isOnDemand = value;\n    this.statusTimeline[2].label = value ? 'Dados de pagamento' : 'Pagamento';\n  }\n  get isOnDemand(): boolean {\n    return this._isOnDemand;\n  }\n\n  public statusTimeline = [\n    {\n      id: 'veiculo',\n      active: false,\n      current: false,\n      label: 'Veículo',\n      activeImg: 'orange-icon-1.svg',\n      checkedImg: 'orange-check.svg',\n      displayImg: 'orange-icon-1.svg'\n    },\n    {\n      id: 'login',\n      active: false,\n      current: false,\n      label: 'Login',\n      defaultImg: 'gray-icon-2.svg',\n      activeImg: 'orange-icon-2.svg',\n      checkedImg: 'orange-check.svg',\n      displayImg: 'gray-icon-2.svg'\n    },\n    {\n      id: 'pagamento',\n      active: false,\n      current: false,\n      label: 'Pagamento',\n      defaultImg: 'gray-icon-3.svg',\n      activeImg: 'orange-icon-3.svg',\n      checkedImg: 'orange-check.svg',\n      displayImg: 'gray-icon-3.svg'\n    },\n    {\n      id: 'foto',\n      active: false,\n      current: false,\n      label: 'Foto',\n      defaultImg: 'gray-icon-4.svg',\n      activeImg: 'orange-icon-4.svg',\n      checkedImg: 'orange-check.svg',\n      displayImg: 'gray-icon-4.svg'\n    },\n    {\n      id: 'cnh',\n      active: false,\n      current: false,\n      label: 'CNH',\n      defaultImg: 'gray-icon-5.svg',\n      activeImg: 'orange-icon-5.svg',\n      checkedImg: 'orange-check.svg',\n      displayImg: 'gray-icon-5.svg'\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  setStatusTimeline(step: IStatusTimeline) {\n    const currentIdx = this.statusTimeline.map(x => x.id).indexOf(step);\n    this.statusTimeline.forEach((statusStep, idx) => {\n      if (idx === currentIdx) {\n        statusStep.current = true;\n        statusStep.displayImg = statusStep.activeImg;\n      }\n      if (idx < currentIdx) {\n        statusStep.active = true;\n        statusStep.displayImg = statusStep.checkedImg;\n      }\n      if (idx > currentIdx) {\n        statusStep.displayImg = statusStep.defaultImg;\n      }\n    });\n  }\n}\n","export class FormatNumber {\n\n    getFormattedNum(num: number) {\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.')\n    }\n\n    getBRLCurrency(price: number) {\n        return new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(price);\n    }\n\n    getCurrency(price: number) {\n        return price.toLocaleString('pt-br', {minimumFractionDigits: 2});\n    }\n}\n"],"sourceRoot":"webpack:///","file":"default-src_app_core_services_header_seo_service_ts-src_app_core_services_quotation_service_t-3237b2.js"}