{"version":3,"mappings":"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","names":["i0","BreadcrumbsComponent","ngOnInit","selectors","CarDetailService","constructor","http","getProtectionCoinsurance","this","get","API_PROTECTIONS_COINSURANCE","replaceAccentedChars","valor","replace","trim","getVehicleDetails","id","searchParams","apiEndpoint","getVehicleDetailsMock","getVehicleDetailsBySKU","sku","getPlates","versionId","colorId","getStatesMock","getCities","uf","API_GET_CITIES","getTariffs","API_GET_TARIFFS","getFranchises","getProtections","groupId","getAdditionalServices","storeId","getPickupStores","skus","parsedSkus","reduce","final","current","slice","getAffiliatedStore","API_AFFILIATED","getPickupStoresByStateCity","state","city","post","estado","cidade","quoteReservation","bookingData","promoCode","bookingHeaders","HttpHeaders","append","headers","getVehicleScheduleAvailables","servico_id","canal_id","filial_id","API_VEHICLE_PICKUP_SCHEDULE","saveVehicleSchedule","payload","API_SAVE_VEHICLE_PICKUP_SCHEDULE","factory","RespFinComponent","ctx_r4","BreadcrumbComponent","router","redirectTo","route","navigate","queryParamsHandling"],"sources":["./projects/zkm-components/src/lib/components/breadcrumbs/breadcrumbs.component.html","./projects/zkm-components/src/lib/components/breadcrumbs/breadcrumbs.component.ts","./src/app/core/services/car-detail.service.ts","./src/app/icons/resp_fin.component.ts","./src/app/shared/breadcrumb/breadcrumb.component.html","./src/app/shared/breadcrumb/breadcrumb.component.ts"],"sourcesContent":["<div class=\"movida-breadcrumbs\">\n    <div class=\"movida-breadcrumbs-home\">\n        <a href=\"/\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2 5.99967L8 1.33301L14 5.99967V13.333C14 13.6866 13.8595 14.0258 13.6095 14.2758C13.3594 14.5259 13.0203 14.6663 12.6667 14.6663H3.33333C2.97971 14.6663 2.64057 14.5259 2.39052 14.2758C2.14048 14.0258 2 13.6866 2 13.333V5.99967Z\" stroke=\"#656F78\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                <path d=\"M6 14.6667V8H10V14.6667\" stroke=\"#656F78\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </a>\n    </div>\n    <div *ngFor=\"let breadcrumb of breadcrumbs\" class=\"movida-breadcrumbs-item\">\n        <p>/</p>\n        <a [href]=\"breadcrumb.link\">\n            {{ breadcrumb.label }}\n        </a>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { ArrayBraedcrumbs } from \"./breadcrumbs.model\";\n\n@Component({\n\tselector: 'movida-breadcrumbs',\n\ttemplateUrl: './breadcrumbs.component.html',\n\tstyleUrls: ['./breadcrumbs.component.scss']\n})\n\nexport class BreadcrumbsComponent {\n\n\t@Input() breadcrumbs: ArrayBraedcrumbs\n\n\tngOnInit() {\n\t}\n\n}\n","import { Injectable, Input } from '@angular/core';\nimport { API_GET_CITIES, API_GET_TARIFFS, API_PROTECTIONS_COINSURANCE, API_AFFILIATED, API_VEHICLE_PICKUP_SCHEDULE, API_SAVE_VEHICLE_PICKUP_SCHEDULE } from 'src/app/core/api/app.api';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarDetailService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  @Input() apiEndpointThree: string;\n\n  @Input() apiEndpoint: string;\n\n  getProtectionCoinsurance() {\n    return this.http.get<any>(`${API_PROTECTIONS_COINSURANCE}`);\n  }\n\n  replaceAccentedChars(valor) {\n    return valor.replace(/[ÀÁÂÃÄÅàáâãäå]/g, 'A')\n      .replace(/[ÈÉÊËèéëê]/g, 'E').replace(/[ÌÍÎÏìíîï]/g, 'I')\n      .replace(/[ÒÓÔÕÖòóôõö]/g, 'O').replace(/[ÙÚÛÜùúûü]/g, 'U')\n      .replace(/[Çç]/g, 'C').trim();\n  }\n\n  getVehicleDetails(id, searchParams) {\n    searchParams = searchParams ? '?' + searchParams : '';\n    return this.http.get<any>(`${this.apiEndpoint}/fleet/vehicle/${id}`);\n  }\n\n  getVehicleDetailsMock() {\n    return this.http.get<any>('../assets/mock/car-detail.json');\n  }\n\n  getVehicleDetailsBySKU(sku, searchParams) {\n    searchParams = searchParams ? '?' + searchParams : '';\n    const url = this.apiEndpoint + '/fleet/vehicle/sku';\n    return this.http.get<any>(`${url}/${sku}`);\n  }\n\n  getPlates(versionId, colorId, searchParams) {\n    searchParams = searchParams ? '?' + searchParams : '';\n    const url = this.apiEndpoint + '/fleet/vehicle/plates';\n    return this.http.get<any>(`${url}/${versionId}/${colorId}`);\n  }\n\n  getStatesMock() {\n    return this.http.get<any>('../assets/mock/states.json');\n  }\n\n  getCities(uf) {\n    return this.http.get<any>(`${API_GET_CITIES}?uf=${uf}`);\n  }\n\n  getTariffs() {\n    return this.http.get<any>(API_GET_TARIFFS);\n  }\n\n  getFranchises() {\n    const url = this.apiEndpoint + '/franchises';\n    return this.http.get<any>(`${url}`);\n  }\n\n  getProtections(groupId) {\n    const url = this.apiEndpoint + '/protection';\n    return this.http.get<any>(`${url}/${groupId}`);\n  }\n\n  getAdditionalServices(storeId) {\n    const url = this.apiEndpoint + '/additional-services';\n    return this.http.get<any>(`${url}/${storeId}`);\n  }\n\n  getPickupStores(skus) {\n    const parsedSkus = skus.reduce((final, current) => { return `${current},${final}` }, \"\").slice(0, -1);\n    const url = this.apiEndpoint + '/delivery-points';\n    return this.http.get<any>(`${url}?skus=${parsedSkus}`);\n  }\n\n  getAffiliatedStore(){\n    return this.http.get<any>(API_AFFILIATED);\n  }\n\n  getPickupStoresByStateCity(state, city) {\n    const data = {\n      estado: state,\n      cidade: city\n    };\n    const url = this.apiEndpoint + '/city-delivery-points';\n    return this.http.post<any>(`${url}`, data);\n  }\n\n  quoteReservation(bookingData: any, promoCode = null) {\n    let bookingHeaders = new HttpHeaders().append('Content-Type', 'application/json');\n    // const promoCodeParam = promoCode ? `?promotional-code=${promoCode}` : '';\n    const url = `${this.apiEndpoint}/booking/quote-tariff`;\n    return this.http.post<any>(url, bookingData, { headers: bookingHeaders });\n  }\n\n  getVehicleScheduleAvailables(servico_id: number, canal_id: number, filial_id: number) {\n    return this.http.get<any>(`${API_VEHICLE_PICKUP_SCHEDULE}/?servico_id=${servico_id}&canal_id=${canal_id}&filial_id=${filial_id}`);\n  }\n\n  saveVehicleSchedule(payload: any) {\n    return this.http.post<any>(`${API_SAVE_VEHICLE_PICKUP_SCHEDULE}`, payload);\n  }\n\n}\n\n/*let head = new HttpHeaders()\n  .append('aplicationName', '0-KM')\n  .append('Content-Type', 'application/json');\n  */\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'icone-resp-fin',\n  template: `<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.alt]=\"alt\" [attr.title]=\"title\" width=\"17.4\" height=\"29\" viewBox=\"0 0 17.4 29\"><defs></defs><path class=\"a\" d=\"M99.15,33.05h17.4v8.7h0l-5.8,5.8,5.8,5.8h0v8.7H99.15v-8.7h0l5.8-5.8-5.8-5.8h0v-8.7m14.5,21.025-5.8-5.8-5.8,5.8V59.15h11.6V54.075m-5.8-7.25,5.8-5.8V35.95h-11.6v5.075l5.8,5.8m-2.9-7.975h5.8v1.088l-2.9,2.9-2.9-2.9Z\" transform=\"translate(-99.15 -33.05)\"/></svg>`,\n  styles: ['.a{fill:#f97d00;}']\n})\nexport class RespFinComponent implements OnInit {\n\n  @Input() alt : String = \"\";\n  @Input() title : String = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row breadcrumb-container w-100 mg-0 w-limit\">\n  <div class=\"col p-l-0 p-r-0\">\n    <ng-container *ngFor=\"let step of steps; let i = index\">\n      <label [id]=\"step.id\" class=\"breadcrumb-text\" [class.breadcrumb-active]=\"(i + 1) == steps.length\"\n        (click)=\"redirectTo(step.link)\">\n        {{step.label}} <span *ngIf=\"(i + 1) < steps.length\">/</span>\n      </label>\n    </ng-container>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nexport interface IBreadcrumb {\n  label: string,\n  link?: string,\n  id: string\n}\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  @Input('steps') public steps: IBreadcrumb[];\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  redirectTo(route) {\n    this.router.navigate([route], { queryParamsHandling: 'merge' });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"common.js"}