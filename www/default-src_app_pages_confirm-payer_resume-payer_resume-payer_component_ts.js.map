{"version":3,"mappings":"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","names":["QuotationService","constructor","checkInArray","itemName","list","existsInArray","forEach","item","Descricao","getProductId","sigla","getProductVetorId","getProductPriceId","getCoinsurance","groupId","protectionCode","coinsuranceCode","Array","MB0KM","MC0KM","coinsurances","JSON","parse","localStorage","getItem","protectionCoinsurance","filter","opt","coinsuranceValue","valores","grupo_id","valor","getBookingPayload","carOpt","protections","equipments","conductors","push","codigo","protection","extraProtections","additionalServices","v","drivers","driver","cpf","nome","sobrenome","tipo","quantidade","x","length","withdrawalDate","moment","add","returnDate","period","dias","parseInt","meses","toString","bookingPayload","data_retirada","format","data_devolucao","local_retirada","local_devolucao","codigo_veiculo","acriss","undefined","mileage","protecoes","equipamentos","condutores","vitrine","franquia","coupon","getPromotion","infoVehicle","monthValuePrevious","monthPrevious","data","periods","TotalCharge","Periods","month","valor_mensal","value_month_promo","value_normal","valor_mensal_total","promo_month","value_day","valor_diaria","total_days","diarias","car_promo","Vehicle","FipeCode","is_promo","getPromotionMonths","ValorTotal","getBackupCarAmount","pricedEquips","backupCar","PricedEquip","Equipment","Sigla","Charge","IncludedInRate","parseFloat","Amount","err","factory","i0","ResumePayerComponent","shared","quotationS","checkoutS","alertMsg","this","FormatNumber","pedido","protecao","franchises","tarifa","Franquia","Periodo","ngOnInit","ngOnChanges","getTariff","calculateInstallments","setCounterLoading","Object","keys","values","promo","total","frota","Grupo","Acriss","bookingData","quoteReservation","subscribe","res","success","VehAvailCore","VehAvailRSCore","VehVendorAvails","VehVendorAvail","VehAvails","VehAvail","getProtections","VehAvailInfo","PricedCoverages","getAdditionalServices","PricedEquips","promotion","isPromo","valueResp","messagePromo","MessagePromocaoVeiculo","messageNoPromo","MessageSemPromocao","totalValueMonth","formatNumber","getBRLCurrency","Number","tariff","RentalRate","RateQualifier","excessKm","RateDistance","promoValue","totalValue","totalResp","encryptTotalPrepagamentoPay","showErrorAlert","pricedCoverages","basicProtection","PricedCoverage","Coverage","Code","basicValue","Calculation","UnitCharge","map","coverage","code","value","id","coparticipacao","Coparticipacao","price_id","Details","descricao","toFixed","copart","extra","selected","panelDetail","coverageDescriptions","conductorsDescription","protectionList","sort","a","b","extraProtectionList","id_vetor","sku","checked","pricedEquip","equipment","charge","equip","Description","additionalServiceList","msg","triggerAlert","openDialog","titulo","mensagem","previous_valor_mensal_total","previous_period","has_promo","reserva","Periodos","isDetails","periodo","totalInstallmentsPromotion","totalInstallments","selectors","SkeletonLoaderComponent"],"sources":["./src/app/core/services/quotation.service.ts","./src/app/pages/confirm-payer/resume-payer/resume-payer.component.html","./src/app/pages/confirm-payer/resume-payer/resume-payer.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuotationService {\n\n  constructor() { }\n\n  checkInArray(itemName, list): boolean {\n    let existsInArray: boolean = false;\n    list.forEach(item => {\n      if (item.Descricao === itemName) {\n        existsInArray = true;\n      }\n    });\n    return existsInArray;\n  }\n\n  getProductId(sigla) {\n    switch (sigla) {\n      case 'ADD': return 1;\n      case 'CFR': return 4;\n      case 'CZKM': return 8;\n      case 'MB0KM': return 1;\n      case 'MC0KM': return 2;\n      case 'WDW1': return 4;\n      case 'WDWP1': return 5;\n      case 'SPZKM': return 215;\n      case 'OSZKM': return 216;\n    }\n  }\n\n  getProductVetorId(sigla) {\n    switch (sigla) {\n      case 'ADD': return 39;\n      case 'CFR': return 59;\n      case 'CZKM': return 96;\n      case 'SPZKM': return 218;\n      case 'OSZKM': return 247;\n    }\n  }\n\n  getProductPriceId(sigla) {\n    switch (sigla) {\n      case 'ADD': return 331;\n      case 'CFR': return 775;\n      case 'CZKM': return 1783;\n      case 'MB0KM': return 157;\n      case 'MC0KM': return 158;\n      case 'WDW1': return 160;\n      case 'WDWP1': return 161;\n      case 'SPZKM': return 278;\n      case 'OSZKM': return 278;\n    }\n  }\n\n  getCoinsurance(groupId, protectionCode) {\n    const coinsuranceCode = new Array();\n    coinsuranceCode['MB0KM'] = 'CPBZKM';\n    coinsuranceCode['MC0KM'] = 'CPCZKM';\n    const coinsurances = JSON.parse(localStorage.getItem('coinsurances'));\n    const protectionCoinsurance = coinsurances ? coinsurances.filter(opt => opt.sigla === coinsuranceCode[protectionCode])[0] : null;\n    const coinsuranceValue = protectionCoinsurance ? protectionCoinsurance.valores.filter(opt => opt.grupo_id === groupId)[0] : null;\n    return coinsuranceValue ? coinsuranceValue.valor : null;\n  }\n\n  getBookingPayload(carOpt) {\n    let protections = [];\n    let equipments = [];\n    let conductors = [];\n    //let qtdDays;\n\n    protections.push({ codigo: carOpt.protection.sigla });\n\n    carOpt.extraProtections.forEach(item => {\n      protections.push({ codigo: item.sigla });\n    });\n\n    if (carOpt.additionalServices) {\n      carOpt.additionalServices.forEach(item => {\n        if (item.sigla === 'ADD') {\n          if (item.drivers) {\n            item.drivers.forEach(driver => {\n              if (driver.cpf !== null) {\n                conductors.push({ nome: 'Condutor', sobrenome: 'Adicional', cpf: driver.cpf });\n              }\n            });\n          } else {\n            conductors = [];\n          }\n        } else {\n          equipments.push({ tipo: item.sigla, quantidade: '1' });\n        }\n      });\n    }\n\n    if (!equipments.filter(x => x.tipo === 96).length) {\n      equipments.push({ tipo: 96, quantidade: '1' })\n    }\n\n    const withdrawalDate = moment().add(1, 'day');\n\n    let returnDate = moment(withdrawalDate).add(carOpt.period && carOpt.period.dias ? carOpt.period.dias : parseInt(carOpt.period.meses) * 30, 'days');\n\n    if(withdrawalDate.toString() === returnDate.toString()){\n      returnDate = moment(withdrawalDate).add(1440, 'days');\n    }\n\n    let bookingPayload = {\n      'data_retirada': withdrawalDate.format('DD/MM/YYYY 10:00'),\n      'data_devolucao': returnDate.format('DD/MM/YYYY 10:00'),\n      'local_retirada': '380',\n      'local_devolucao': '380',\n      \"with-unavailable\": true,\n      'codigo_veiculo': carOpt.acriss,\n      'sigla': carOpt.mileage.valor === undefined ? \"\" : carOpt.mileage.valor.sigla,\n      'protecoes': protections,\n      'equipamentos': equipments,\n      'condutores': conductors,\n      'vitrine': false,\n      'franquia': null\n    }\n\n    const coupon = localStorage.getItem('CPN');\n    if (coupon) {\n      bookingPayload['coupon'] = coupon;\n    }\n\n    return bookingPayload;\n  }\n\n  getPromotion(infoVehicle) {\n\n    let periods = infoVehicle.TotalCharge.Periods\n    let monthValuePrevious = 0;\n    let monthPrevious = 0;\n    let data = {};\n\n    periods.forEach(month => {\n      if (month.valor_mensal != monthValuePrevious && monthPrevious > 0) {\n        data = {\n          \"value_month_promo\": monthValuePrevious,\n          \"value_normal\": month.valor_mensal,\n          \"valor_mensal_total\": month.valor_mensal_total,\n          \"promo_month\": monthPrevious,\n          \"value_day\": month.valor_diaria,\n          \"total_days\": month.diarias,\n          \"car_promo\": infoVehicle.Vehicle.FipeCode,\n          \"is_promo\": true\n        }\n      }\n      monthValuePrevious = month.valor_mensal;\n      monthPrevious++;\n    });\n\n    return data;\n\n  }\n\n  getPromotionMonths(periods) {\n\n    let monthValuePrevious = 0;\n    let monthPrevious = 0;\n    let data = {};\n\n    periods.forEach(month => {\n      if (month.ValorTotal != monthValuePrevious && monthPrevious > 0) {\n        data = {\n          \"value_month_promo\": monthValuePrevious,\n          \"value_normal\": month.ValorTotal,\n          \"promo_month\": monthPrevious,\n          \"valor_mensal_total\": month.valor_mensal_total,\n          \"is_promo\": true\n        }\n      }\n      monthValuePrevious = month.ValorTotal;\n      monthPrevious++;\n    });\n\n    return data;\n\n  }\n\n  getBackupCarAmount(pricedEquips) {\n    try {\n      const backupCar = pricedEquips.filter(x => x.PricedEquip.Equipment.Sigla === 'CZKM')[0];\n      return backupCar.PricedEquip.Charge.IncludedInRate === 'true' ? parseFloat(backupCar.PricedEquip.Charge.Amount) : 0;\n    } catch (err) {\n      return 0;\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"wrapper\">\n    <div class=\"title\">\n      Valor total\n    </div>\n    <div class=\"value\">\n      <span *ngIf=\"!isDetails\" class=\"value__primary\">{{ isPromo ? promoValue : totalValue }}</span>\n      <span *ngIf=\"isDetails\" class=\"value__primary\">\n        {{ isPromo ? totalInstallmentsPromotion : totalInstallments }}/</span>\n      <span class=\"value__regular\">mês</span>\n    </div>\n    <div *ngIf=\"messagePromo || messageNoPromo\" class=\"observation\">\n      <ng-template [ngIf]=\"messagePromo\">\n        <hr class=\"observation__hr\">\n        <span class=\"observation__label\">\n          {{ reserva?.MessagePromocaoVeiculo ? reserva?.MessagePromocaoVeiculo: messagePromo }}\n        </span>\n      </ng-template>\n      <ng-template [ngIf]=\"messageNoPromo\">\n        <hr class=\"observation__hr\">\n        <span class=\"observation__label\">\n          {{ reserva?.MessageSemPromocao ? reserva?.MessageSemPromocao: messageNoPromo }}\n        </span>\n      </ng-template>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { CheckoutService } from 'src/app/core/services/checkout.service';\nimport { QuotationService } from 'src/app/core/services/quotation.service';\nimport { AlertMessageComponent } from 'src/app/shared/alert-message/alert-message.component';\nimport { SkeletonLoaderComponent } from 'src/app/shared/skeleton-loader/skeleton-loader.component';\nimport { MainSharedService } from 'src/app/util/shared.service';\nimport { FormatNumber } from '../../../util/formatNumber.util';\n\n@Component({\n  selector: 'app-resume-payer',\n  templateUrl: './resume-payer.component.html',\n  styleUrls: ['./resume-payer.component.scss'],\n  providers: [SkeletonLoaderComponent]\n})\nexport class ResumePayerComponent implements OnInit {\n\n  @Input() pedido: any;\n  @Input() reserva: any;\n  @Input() isDetails: boolean;\n\n  // Choosen Car Options\n  public carOpt: any;\n\n  public isPromo: boolean = false\n  public promoValue: string;\n  public totalValue: string;\n  public totalValueMonth: string;\n  public totalResp: string;\n  public isOfferBlackFriday: boolean = false;\n  private triggerAlert: boolean = true;\n\n  public protectionList = new Array<any>();\n  public extraProtectionList = new Array<any>();\n  public additionalServiceList = new Array<any>();\n  public messagePromo: string;\n  public messageNoPromo: string;\n\n  // Quotation values\n  public excessKm: string;\n\n  // Utils\n  private formatNumber: FormatNumber = new FormatNumber();\n\n  get protections() {\n    return this.pedido && this.pedido.protecao ? this.pedido.protecao : 0\n  }\n\n  get franchises() {\n    return this.pedido && this.pedido.tarifa ? this.pedido.tarifa.Franquia : 0\n  }\n\n  get periods() {\n    return this.pedido && this.pedido.tarifa ? this.pedido.tarifa.Periodo : 0\n  }\n\n  // New variables\n  public totalInstallmentsPromotion: string;\n  public totalInstallments: string;\n\n  constructor(\n    private shared: MainSharedService,\n    private quotationS: QuotationService,\n    private checkoutS: CheckoutService,\n    private alertMsg: AlertMessageComponent,\n  ) { }\n\n  ngOnInit() { }\n\n  ngOnChanges() {\n    this.getTariff();\n    this.calculateInstallments();\n  }\n\n  // Quote Tariff\n\n  getTariff() {\n    this.shared.setCounterLoading(true);\n    if (Object.keys(this.protections).length == 0 || !this.franchises || !this.periods) {\n      this.shared.setCounterLoading(false);\n      return;\n    }\n\n    this.carOpt = {\n      protection: {\n        sigla: this.pedido.protecao.Sigla,\n      },\n      values: {\n        promo: null,\n        total: null\n      },\n      extraProtections: [],\n      additionalServices: [],\n      period: {\n        meses: parseInt(this.periods)\n      },\n      mileage: {\n        valor: {\n          sigla: this.pedido.tarifa.Sigla\n        }\n      },\n      groupId: this.pedido.frota.Grupo,\n      acriss: this.pedido.frota.Acriss\n    }\n\n    if (this.pedido.frota.Acriss) {\n      this.carOpt.acriss = this.pedido.frota.Acriss;\n    }\n\n    const bookingData = this.quotationS.getBookingPayload(this.carOpt);\n    this.carOpt.bookingPayload = bookingData;\n    const quotation = this.quoteReservation(bookingData);\n    this.shared.setCounterLoading(false);\n  }\n\n  async quoteReservation(bookingData) {\n    if (localStorage.getItem('pagadorID') != 'null') {\n      const isHolderCard = {\n        tipo: \"RESP_FINAN\", // Não trocar esse string | A mudança deve ser feita no BE-0KM\n        quantidade: 1\n      }\n      bookingData.equipamentos.push(isHolderCard);\n    }\n\n    // this.shared.setCounterLoading(true);\n    if (localStorage.getItem('pagadorID') != 'null') {\n      const isHolderCard = {\n        tipo: \"RESP_FINAN\", // Não trocar esse string | A mudança deve ser feita no BE-0KM\n        quantidade: 1\n      }\n      bookingData.equipamentos.push(isHolderCard);\n    }\n    this.checkoutS.quoteReservation(bookingData).subscribe(res => {\n      if (res !== null && res !== undefined && res && res.success && res.data.success) {\n        const VehAvailCore = res.data.VehAvailRSCore.VehVendorAvails.VehVendorAvail.VehAvails[0].VehAvail.VehAvailCore;\n        this.getProtections(VehAvailCore.VehAvailInfo.PricedCoverages);\n        this.getAdditionalServices(VehAvailCore.PricedEquips);\n\n        const periods = VehAvailCore.TotalCharge.Periods;\n        const promotion = this.quotationS.getPromotion(VehAvailCore);\n\n        this.isPromo = promotion['is_promo'] ? promotion['is_promo'] : false;\n        let promo = this.isPromo ? periods[0].valor_mensal_total : null;\n        let total = this.isPromo ? promotion['valor_mensal_total'] : periods[0].valor_mensal_total;\n        const valueResp = 19.90;\n\n        promo += valueResp;\n        total += valueResp;\n        const messagePromo = res.data.VehAvailRSCore.VehVendorAvails.VehVendorAvail.VehAvails[0];\n        this.messagePromo = this.isPromo ? messagePromo.VehAvail.VehAvailCore.VehAvailInfo.MessagePromocaoVeiculo : '';\n        this.messageNoPromo = messagePromo.VehAvail.VehAvailCore.VehAvailInfo.MessageSemPromocao;\n        this.carOpt.values.promo = this.isPromo ? this.isPromo.toString() : null;\n        this.carOpt.values.total = total.toString();\n        this.totalValueMonth = this.formatNumber.getBRLCurrency(Number((total -= valueResp).toString()));\n        this.carOpt.tariff = VehAvailCore.RentalRate.RateQualifier.RateQualifier;\n\n        this.excessKm = this.formatNumber.getBRLCurrency(Number(VehAvailCore.RentalRate.RateDistance.Amount));\n        this.promoValue = this.isPromo ? this.formatNumber.getBRLCurrency(Number(this.isPromo ? periods[0].valor_mensal_total : null)) : null;\n        this.totalValue = this.formatNumber.getBRLCurrency(Number(this.carOpt.values.total));\n        this.totalResp = this.formatNumber.getBRLCurrency(Number(valueResp));\n\n        // Criptografa o total para o prepagamento-pay\n        if (this.isPromo) {\n          this.checkoutS.encryptTotalPrepagamentoPay(Number(this.carOpt.values.promo));\n        } else {\n          this.checkoutS.encryptTotalPrepagamentoPay(Number(this.carOpt.values.total));\n        }\n\n      } else {\n        this.showErrorAlert();\n      }\n    });\n  }\n\n  getProtections(pricedCoverages) {\n    const protections = [];\n    const extraProtections = [];\n\n    const basicProtection = pricedCoverages.filter(x => x.PricedCoverage.Coverage.Code === 'MB0KM')[0];\n    const basicValue = basicProtection ? parseFloat(basicProtection.PricedCoverage.Charge.Calculation.UnitCharge) * 30 : 0;\n\n    pricedCoverages.map(coverage => {\n      const code = coverage.PricedCoverage.Coverage.Code;\n      const value = coverage.PricedCoverage.Charge.Calculation.UnitCharge;\n\n      if (code === 'MC0KM' || code === 'MB0KM') {\n        const protection = {\n          id: this.quotationS.getProductId(code),\n          coparticipacao: coverage.PricedCoverage.Coverage.Coparticipacao,\n          price_id: this.quotationS.getProductPriceId(code),\n          sigla: code,\n          nome: coverage.PricedCoverage.Coverage.Details[0].value,\n          descricao: coverage.PricedCoverage.Coverage.Details[1].value,\n          valor: code === 'MC0KM' ? ((parseFloat(value) * 30) - basicValue).toFixed(2) : (0).toFixed(2),\n          copart: this.quotationS.getCoinsurance(this.carOpt.groupId, code),\n          extra: false,\n          selected: coverage.PricedCoverage.Charge.IncludedInRate,\n          panelDetail: 'out',\n          coverageDescriptions: code === 'MC0KM' ? [\n            'Cobertura para danos corporais causados a terceiros limitada a R$250M;',\n            'Cobertura para danos materiais causados a terceiros limitada a R$250M;',\n            'Cobertura para danos morais causados a terceiros limitada a R$30M.'\n          ] : null,\n          conductorsDescription: 'A cobertura engloba também outros condutores, que possam dirigir o veículo, contanto que sejam maiores de 21 anos e tenham habilitação há mais de 2 anos.'\n        }\n        if (coverage.PricedCoverage.Charge.IncludedInRate) {\n          this.carOpt.protection = protection;\n        }\n        protections.push(protection);\n      }\n    });\n\n    if (protections.length === 0) {\n      this.showErrorAlert();\n    } else {\n      this.protectionList = protections.sort((a, b) => a.sigla < b.sigla ? -1 : 1);\n      this.extraProtectionList = extraProtections.sort((a, b) => a.sigla < b.sigla ? -1 : 1);\n    }\n  }\n\n  getAdditionalServices(pricedEquips) {\n    const additionalServices = new Array<any>();\n    additionalServices.push({\n      id: this.quotationS.getProductId('ADD'),\n      id_vetor: this.quotationS.getProductVetorId('ADD'),\n      price_id: this.quotationS.getProductPriceId('ADD'),\n      sigla: 'ADD',\n      sku: '1',\n      nome: 'Condutor adicional',\n      descricao: 'Inclua até 3 condutores adicionais para dirigir o seu possante!',\n      valor: '0',\n      checked: false,\n      panelDetail: 'out',\n    });\n\n    pricedEquips.map(pricedEquip => {\n      const equipment = pricedEquip.PricedEquip.Equipment;\n      const charge = pricedEquip.PricedEquip.Charge;\n      const sigla = equipment.Sigla;\n\n      if (sigla === 'CFR' || sigla === 'CZKM' || sigla === 'SPZKM') {\n        const equip = {\n          id: this.quotationS.getProductId(sigla),\n          id_vetor: this.quotationS.getProductVetorId(sigla),\n          price_id: this.quotationS.getProductPriceId(sigla),\n          sigla: sigla,\n          sku: '1',\n          nome: equipment.Description,\n          descricao: equipment.Details,\n          valor: sigla === 'CZKM' ? '0' : (parseFloat(charge.Calculation.UnitCharge) * 30).toFixed(2),\n          checked: charge.IncludedInRate === 'true' ? true : false,\n          panelDetail: 'out',\n        }\n        additionalServices.push(equip);\n      }\n    });\n\n    this.additionalServiceList = additionalServices.sort((a, b) => a.sigla < b.sigla ? -1 : 1);\n    this.shared.setCounterLoading(false);\n  }\n\n  showErrorAlert(msg = null) {\n    if (this.triggerAlert) {\n      this.shared.setCounterLoading(false);\n      this.triggerAlert = false;\n      const message = msg ? msg : 'Não foi possível carregar as informações do veículo. Por favor, tente novamente mais tarde.';\n      this.alertMsg.openDialog({\n        tipo: 'redirect',\n        titulo: 'Desculpe,',\n        mensagem: message\n      }, 'redirect', true);\n    }\n  }\n\n  private calculateInstallments(): void {\n\n    let previous_valor_mensal_total = 0;\n    let previous_period = 0;\n    let promotion: any = {\n      has_promo: false\n    };\n\n    if (this.reserva && this.reserva.Periodos && this.reserva.Periodos.length > 0 && this.isDetails) {\n\n      this.reserva.Periodos.forEach((periodo: any) => {\n        if (periodo.valor_mensal_total != previous_valor_mensal_total && previous_period > 0) {\n          promotion = {\n            previous_valor_mensal_total: previous_valor_mensal_total,\n            valor_mensal_total: periodo.valor_mensal_total,\n            previous_period: previous_period,\n            has_promo: true\n          };\n        }\n        previous_valor_mensal_total = periodo.valor_mensal_total;\n        previous_period++;\n      });\n\n      if (promotion.has_promo) {\n        this.totalInstallmentsPromotion = `${this.formatNumber.getBRLCurrency(Number(promotion.previous_valor_mensal_total))}`;\n      } else {\n        this.totalInstallments = `${this.formatNumber.getBRLCurrency(Number(this.reserva.Periodos[0].valor_mensal_total))}`;\n      }\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"default-src_app_pages_confirm-payer_resume-payer_resume-payer_component_ts.js"}