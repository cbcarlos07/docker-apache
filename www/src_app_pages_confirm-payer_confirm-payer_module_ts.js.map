{"version":3,"mappings":"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","names":["i0","routes","path","component","constructor","titleS","router","route","shared","orderService","alertMsg","checkout","checkLoginService","seoService","this","localStorage","getItem","SubSink","ngOnInit","check","setTitle","createLinkForCanonicalURL","user","emailPayer","loadPageConfigurations","PessoaID","userLogged","checkCreditAnalysis","setCounterLoading","sub","sink","getCreditAnalysis","orderId","subscribe","res","data","msg","title","verifyContract","setAlert","pedido","status","id","ex","openDialog","tipo","titulo","mensagem","then","dialogRef","afterClosed","checkUserToGetOrder","onDemand","isOnDemand","snapshot","params","urlPath","url","split","isOrderDetails","includes","isSeller","checkWarning","enableWarning","enableWarningBySelfie","enableWarningByCnh","enableDocuments","PedidoFrotaID","parseInt","getNewContract","success","setLoadingAtivo","ignoreAnalysis","getOrder","navigate","enableRefreshStatus","PedidoFrotaStatusID","reserva","icon","setItem","ReservaID","getSellerOrder","selfieUploaded","enableButton","cnhUploaded","ngOnDestroy","removeVehicleDetails","unsubscribe","ConfirmPayerComponent","selectors","AlertMessageComponent","decls","ConfirmPayerRoutingModule","RouterModule","ConfirmPayerModule","CommonModule","SharedModule"],"sources":["./src/app/pages/confirm-payer/confirm-payer.component.html","./src/app/pages/confirm-payer/confirm-payer-routing.module.ts","./src/app/pages/confirm-payer/confirm-payer.component.ts","./src/app/pages/confirm-payer/confirm-payer.module.ts"],"sourcesContent":["<div class=\"confirm-banner\" [ngStyle]=\"{'margin-bottom': pedido?.status?.StatusId !== 13 ? '25px' : 'auto'}\">\n  <div class=\"container\">\n    <div class=\"confirm-title\">\n      <span class=\"confirm-title\">\n        {{ user?.razaosocial }}, obrigado por escolher a Movida!\n      </span>\n    </div>\n\n    <div class=\"confirm-subtitle\">\n      <span>\n        Enviaremos todos os dados do pedido no e-mail <b>{{ emailPayer }}</b> e um link para acompanhar o progresso da sua compra.\n      </span>\n    </div>\n\n    <div class=\"card m-t-20\">\n\n      <!-- Status do pedido -->\n      <div class=\"card__status w-100\">\n        <label class=\"title\">Status do Pedido:</label>\n        <label class=\"content\" [style.color]=\"'#F47920'\">\n          <div class=\"status\">\n            <icone-resp-fin alt=\"\" title=\"{{ pedido?.PessoaID != userLogged && pedido?.status?.StatusId == 5 ? 'Análise de fraude recusada' :  pedido?.status?.StatusDesc }}\"></icone-resp-fin>\n            <span>\n              {{ pedido?.PessoaID != userLogged && pedido?.status?.StatusId == 5 ? \"Análise do Cartão Rejeitada\" :  pedido?.status?.StatusDesc }}\n            </span>\n          </div>\n        </label>\n      </div>\n      <!-- END - Status do pedido -->\n\n      <div class=\"card__reserva\">\n        <label class=\"title\">Pedido Nº:</label>\n        <label class=\"content\">{{ orderId }}</label>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<!-- Warning -->\n<div class=\"container\" *ngIf=\"pedido?.status?.StatusId === 13\">\n  <app-warning-checkout [minHeight]=\"'50px'\" [fontSize]=\"'14px'\">\n    {{ warningMessage }}\n  </app-warning-checkout>\n</div>\n\n<br>\n\n<!-- Meu Pedido-->\n<app-pedido [respFinanceiro]=\"true\" [pedido]=\"pedido\" [reserva]=\"reserva\"></app-pedido>\n\n<!-- Resumo -->\n<app-resume-payer [pedido]=\"pedido\" [reserva]=\"reserva\"></app-resume-payer>\n\n<!-- Termos e Condições -->\n<app-termos-payer [enableButton]=\"enableButton\"></app-termos-payer>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConfirmPayerComponent } from './confirm-payer.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmPayerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfirmPayerRoutingModule { }","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { OrderService } from 'src/app/core/services/order.service';\nimport { MainSharedService } from 'src/app/util/shared.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { AlertMessageComponent } from 'src/app/shared/alert-message/alert-message.component';\nimport { SubSink } from 'subsink';\nimport { CheckoutService } from 'src/app/core/services/checkout.service';\nimport { CheckLoginService } from 'src/app/core/services/checklogin.service';\nimport { SeoService } from 'src/app/core/services/header/seo.service';\n\n@Component({\n  selector: 'app-confirm-payer',\n  templateUrl: './confirm-payer.component.html',\n  styleUrls: ['./confirm-payer.component.scss'],\n  providers: [AlertMessageComponent]\n})\nexport class ConfirmPayerComponent implements OnInit, OnDestroy {\n\n  public orderId: string;\n  public pedido: any;\n  public reserva: any;\n  public user: any;\n  public emailPayer: string;\n\n  public onDemand: boolean;\n  public isOrderDetails: boolean = false;\n  public isSeller: boolean = localStorage.getItem('choosenView') === 'seller';\n  public enableButton: boolean;\n  public enableRefreshStatus: boolean = false;\n  public userLogged: number = 0;\n\n  public enableWarning: boolean = false;\n  public enableWarningByCnh: boolean = false;\n  public enableWarningBySelfie: boolean = false;\n  public warningTitle: string = 'Tudo certo!';\n  public warningMessage: string = 'Recebemos o seu pedido, porém precisamos que o responsável financeiro faça o cadastro na Movida e efetue o pagamento para concluir a compra do seu veículo. O Responsável Financeiro tem um prazo de 1 hora para concluir o pedido.';\n\n  private sub = new SubSink();\n\n  constructor(\n    private titleS: Title,\n    private router: Router,\n    private route: ActivatedRoute,\n    private shared: MainSharedService,\n    private orderService: OrderService,\n    private alertMsg: AlertMessageComponent,\n    private checkout: CheckoutService,\n    private checkLoginService: CheckLoginService,\n    private seoService: SeoService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoginService.check()\n    this.titleS.setTitle('Zero Km - Responsável - Sucesso');\n    this.seoService.createLinkForCanonicalURL();\n    this.user = this.shared.user;\n    this.emailPayer = this.shared.emailPayer;\n    this.loadPageConfigurations();\n    this.shared.user && this.shared.user.PessoaID ? this.userLogged = this.shared.user.PessoaID : false\n  }\n\n  checkCreditAnalysis() {\n    let msg = 'Não foi possível realizar a análise do seu pedido no momento.';\n\n    this.shared.setCounterLoading(true);\n    this.sub.sink = this.checkout.getCreditAnalysis(this.orderId).subscribe(res => {\n      // Verificação de mensagens de análise de crédito\n      if (res && res.data) {\n        let msg, title = ''\n        switch (res.data) {\n          case 'Aprovado':\n            this.shared.setCounterLoading(false);\n            this.verifyContract();\n            break;\n          case 'Analise Reprovada':\n            this.shared.setCounterLoading(false);\n            title = 'Desculpe!'\n            msg = 'Infelizmente você não passou pela análise de crédito.'\n            this.setAlert(title, msg)\n            break;\n          case 'Em análise':\n            this.shared.setCounterLoading(false);\n            if (this.pedido.status.id === 12) {\n              title = 'Aguarde!'\n              msg = 'Seu pedido está passando por análise de crédito.'\n              this.setAlert(title, msg)\n            }\n            break;\n          case 'Processando pagamento':\n            this.shared.setCounterLoading(false);\n            title = 'Aguarde!'\n            msg = 'Seu pagamento está sendo processado.'\n            this.setAlert(title, msg)\n            break;\n\n          default:\n            this.shared.setCounterLoading(false);\n            title = 'Atenção!'\n            msg = 'Não foi possível realizar a análise do seu pedido no momento.'\n            this.setAlert(title, msg)\n            break;\n        }\n      }\n    }, ex => {\n      this.shared.setCounterLoading(false);\n      this.alertMsg.openDialog({\n        tipo: 'message',\n        titulo: 'Atenção!',\n        mensagem: msg\n      }, 'message', true);\n      // this.checkUserToGetOrder();\n    });\n  }\n\n  setAlert(title, msg) {\n    this.alertMsg.openDialog({\n      tipo: 'message',\n      titulo: title,\n      mensagem: msg\n    }, 'message', true).then(dialogRef => {\n      this.sub.sink = dialogRef.afterClosed().subscribe(() => {\n        this.checkUserToGetOrder(true);\n      });\n    });\n  }\n\n  loadPageConfigurations() {\n    this.onDemand = this.shared.isOnDemand;\n    this.orderId = this.route.snapshot.params.orderId;\n    const urlPath = this.router.url.split('?')[0];\n    this.isOrderDetails = urlPath.includes('assinatura/responsavel/sucesso');\n    if (!this.isOrderDetails && !this.isSeller) {\n      this.checkCreditAnalysis();\n      return;\n    }\n    this.checkUserToGetOrder();\n  }\n\n  checkWarning() {\n    this.enableWarning = this.enableWarningBySelfie && this.enableWarningByCnh;\n  }\n\n  get enableDocuments() {\n    return this.pedido && this.pedido.status && this.pedido.status.id !== 1;\n  }\n\n  verifyContract() {\n    this.shared.setCounterLoading(true);\n    let data = {\n      \"PedidoFrotaID\": parseInt(this.orderId)\n    };\n    this.sub.sink = this.checkout.getNewContract(data).subscribe(res => {\n      if (res && res.success) {\n        this.shared.setCounterLoading(false);\n        this.shared.setLoadingAtivo(false);\n        this.checkUserToGetOrder();\n        return;\n      }\n      this.shared.setCounterLoading(false);\n      this.checkUserToGetOrder();\n    }, ex => {\n      this.shared.setCounterLoading(false);\n      this.alertMsg.openDialog({\n        tipo: 'message',\n        titulo: 'Atenção!',\n        mensagem: 'Não foi possível realizar a análise do seu pedido no momento.'\n      }, 'message', true);\n      // this.checkUserToGetOrder();\n    });\n  }\n\n  checkUserToGetOrder(ignoreAnalysis = false) {\n    // this.isSeller ? this.getSellerOrder() : this.getOrder(ignoreAnalysis);\n    this.isSeller ? this.getOrder(true) : this.getOrder(ignoreAnalysis);\n  }\n\n  getOrder(ignoreAnalysis = false) {\n    this.shared.setCounterLoading(true);\n    this.sub.sink = this.orderService.getOrder(this.orderId).subscribe(data => {\n      // data.pedido && data.pedido.PedidoFrotaStatusID !== (1 || 3 || 5 || 7 || 9|| 10 || 12) ? this.enableRefreshStatus = true : this.enableRefreshStatus = false\n      if (!data) {\n        this.shared.setCounterLoading(false);\n        this.alertMsg.openDialog({\n          tipo: 'message',\n          titulo: 'Algo deu errado!',\n          mensagem: 'Não foi possível carregar as informações do seu pedido. Tente novamente mais tarde.'\n        }, 'message', true);\n        this.router.navigate(['/minha-conta']);\n        return void (0);\n      }\n      data.pedido && data.pedido.PedidoFrotaStatusID !== (3 || 5 || 7 || 9 || 10) ? this.enableRefreshStatus = true : this.enableRefreshStatus = false\n      this.pedido = data.pedido;\n      this.reserva = data.reserva;\n      this.shared.setCounterLoading(false);\n      this.shared.setLoadingAtivo(false);\n      if (data.pedido.PedidoFrotaStatusID === 3 && !localStorage.getItem('approvedStatus')) {\n        this.alertMsg.openDialog({\n          icon: 'ok-icone.svg',\n          tipo: 'message',\n          titulo: 'Aprovado!',\n          mensagem: 'Agora é só esperar um pouquinho que nosso time entrará em contato para agendar a entrega do seu veículo.'\n        }, 'message', true).then(dialogRef => {\n          this.sub.sink = dialogRef.afterClosed().subscribe(() => {\n            localStorage.setItem('approvedStatus', '1-' + data.pedido.ReservaID)\n          })\n        })\n      }\n      if (!(!this.reserva || (!this.reserva.length && this.reserva.length === 0)) && !ignoreAnalysis && this.pedido.PedidoFrotaStatusID !== (3 || 5 || 7 || 9 || 10)) {\n        // if (!(!this.reserva || (!this.reserva.length && this.reserva.length === 0)) && !ignoreAnalysis && this.pedido.PedidoFrotaStatusID !== (1 || 3 || 5 || 7 || 9 || 10 ||12)) {\n        // this.checkCreditAnalysis();\n      }\n    }, ex => {\n      this.shared.setCounterLoading(false);\n      this.alertMsg.openDialog({\n        tipo: 'message',\n        titulo: 'Algo deu errado!',\n        mensagem: 'Não foi possível carregar as informações do seu pedido. Tente novamente mais tarde.'\n      }, 'message', true);\n      this.router.navigate(['/minha-conta']);\n    });\n  }\n\n  getSellerOrder() {\n    this.shared.setCounterLoading(true);\n    this.sub.sink = this.orderService.getSellerOrder(this.orderId).subscribe(data => {\n      this.pedido = data;\n      this.shared.setCounterLoading(false);\n    }, ex => {\n      this.shared.setCounterLoading(false);\n      this.alertMsg.openDialog({\n        tipo: 'message',\n        titulo: 'Algo deu errado!',\n        mensagem: 'Não foi possível carregar as informações do seu pedido. Tente novamente mais tarde.'\n      }, 'message', true);\n      this.router.navigate(['/minha-conta']);\n    });\n  }\n\n  selfieUploaded() {\n    this.enableWarningBySelfie = true;\n    this.enableButton = true;\n    this.checkWarning();\n  }\n\n  cnhUploaded() {\n    this.enableWarningByCnh = true;\n    this.enableButton = true;\n    this.checkWarning();\n  }\n\n  ngOnDestroy() {\n    this.shared.removeVehicleDetails();\n    this.sub.unsubscribe();\n  }\n}\n","//modules\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { ConfirmPayerRoutingModule } from './confirm-payer-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n//components\nimport { ConfirmPayerComponent } from './confirm-payer.component';\n\n@NgModule({\n  imports: [\n    ConfirmPayerRoutingModule,\n    CommonModule,\n    SharedModule,\n  ],\n  declarations: [\n    ConfirmPayerComponent,\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n})\nexport class ConfirmPayerModule { }\n"],"sourceRoot":"webpack:///","file":"src_app_pages_confirm-payer_confirm-payer_module_ts.js"}